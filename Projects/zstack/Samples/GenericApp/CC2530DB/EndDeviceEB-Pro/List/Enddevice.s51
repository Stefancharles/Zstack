///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        03/Dec/2019  23:54:33 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\Enddevice.c      /
//    Command line       =  -f "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas     /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\Tools\C /
//                          C2530DB\f8wEndev.cfg" (-DCPU32MHZ                 /
//                          -DROOT=__near_func -DBLINK_LEDS) -f               /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\Tools\C /
//                          C2530DB\f8wConfig.cfg" (-DSECURE=0                /
//                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "C:\Users\13911\Desktop\´® /
//                          ¿ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0- /
//                          1.4.0\Projects\zstack\Samples\GenericApp\CC2530DB /
//                          \Enddevice.c" -D ZIGBEEPRO -D NWK_AUTO_POLL -D    /
//                          ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D             /
//                          MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -D             /
//                          xPOWER_SAVING -lC "C:\Users\13911\Desktop\´®¿ÚÊÕ· /
//                          ¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0 /
//                          \Projects\zstack\Samples\GenericApp\CC2530DB\EndD /
//                          eviceEB-Pro\List\" -lA "C:\Users\13911\Desktop\´® /
//                          ¿ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0- /
//                          1.4.0\Projects\zstack\Samples\GenericApp\CC2530DB /
//                          \EndDeviceEB-Pro\List\" --diag_suppress           /
//                          Pe001,Pa010 -o "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢Êµ /
//                          Ñé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pr /
//                          ojects\zstack\Samples\GenericApp\CC2530DB\EndDevi /
//                          ceEB-Pro\Obj\" -e --debug --core=plain            /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\" -I             /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\SOURCE\" -I   /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\ZMAIN\T /
//                          I2530DB\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé /
//                          \Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proj /
//                          ects\zstack\Samples\GenericApp\CC2530DB\..\..\..\ /
//                          ..\..\COMPONENTS\MT\" -I                          /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\HAL\INCLUDE\" -I                        /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\HAL\TARGET\CC2530EB\" -I                /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\OSAL\MCU\CCSOC\" -I                     /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\OSAL\INCLUDE\" -I                       /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\AF\" -I                           /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\NWK\" -I                          /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\SEC\" -I                          /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\SAPI\" -I                         /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\SYS\" -I                          /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\STACK\ZDO\" -I                          /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\ZMAC\F8W\" -I                           /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\ZMAC\" -I "C:\Users\13911\Desktop\´®¿ÚÊ /
//                          Õ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4 /
//                          .0\Projects\zstack\Samples\GenericApp\CC2530DB\.. /
//                          \..\..\..\..\COMPONENTS\SERVICES\SADDR\" -I       /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\SERVICES\SDATA\" -I                     /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\MAC\INCLUDE\" -I                        /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\MAC\HIGH_LEVEL\" -I                     /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\MAC\LOW_LEVEL\srf04\" -I                /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\..\..\..\..\C /
//                          OMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\" -Ohz  /
//                          --require_prototypes                              /
//    List file          =  C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\EndDeviceEB-Pro\ /
//                          List\Enddevice.s51                                /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Enddevice

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??GenericApp_Init?relay
        FUNCTION ??GenericApp_Init?relay,0203H
        PUBLIC ??GenericApp_MessageMSGCB?relay
        FUNCTION ??GenericApp_MessageMSGCB?relay,0203H
        PUBLIC ??GenericApp_ProcessEvent?relay
        FUNCTION ??GenericApp_ProcessEvent?relay,0203H
        PUBLIC GenericApp_ClusterList
        PUBLIC GenericApp_DstAddr
        PUBLIC GenericApp_Init
        FUNCTION GenericApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC GenericApp_MessageMSGCB
        FUNCTION GenericApp_MessageMSGCB,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 21, STACK
        PUBLIC GenericApp_NwkState
        PUBLIC GenericApp_ProcessEvent
        FUNCTION GenericApp_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC GenericApp_SimpleDesc
        PUBLIC GenericApp_TaskID
        PUBLIC GenericApp_TransID
        PUBLIC GenericApp_epDesc
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
afRegister          SYMBOL "afRegister"
HalUARTOpen         SYMBOL "HalUARTOpen"
osal_msg_receive    SYMBOL "osal_msg_receive"
HalLedSet           SYMBOL "HalLedSet"
osal_set_event      SYMBOL "osal_set_event"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
osal_memcpy         SYMBOL "osal_memcpy"
osal_memcmp         SYMBOL "osal_memcmp"
??HalLedSet?relay   SYMBOL "?relay", HalLedSet
??HalUARTOpen?relay SYMBOL "?relay", HalUARTOpen
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_memcmp?relay SYMBOL "?relay", osal_memcmp
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_set_event?relay SYMBOL "?relay", osal_set_event
GenericApp_Init     SYMBOL "GenericApp_Init"
??GenericApp_Init?relay SYMBOL "?relay", GenericApp_Init
GenericApp_MessageMSGCB SYMBOL "GenericApp_MessageMSGCB"
??GenericApp_MessageMSGCB?relay SYMBOL "?relay", GenericApp_MessageMSGCB
GenericApp_ProcessEvent SYMBOL "GenericApp_ProcessEvent"
??GenericApp_ProcessEvent?relay SYMBOL "?relay", GenericApp_ProcessEvent

        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTOpen
        FUNCTION HalUARTOpen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedSet
        FUNCTION HalLedSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcmp
        FUNCTION osal_memcmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??HalLedSet?relay
        FUNCTION ??HalLedSet?relay,00H
        EXTERN ??HalUARTOpen?relay
        FUNCTION ??HalUARTOpen?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_memcmp?relay
        FUNCTION ??osal_memcmp?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_set_event?relay
        FUNCTION ??osal_set_event?relay,00H

// C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\GenericApp\CC2530DB\Enddevice.c
//    1 #include "OSAL.h"
//    2 #include "AF.h"
//    3 #include "ZDApp.h"
//    4 #include "ZDObject.h"
//    5 #include "ZDProfile.h"
//    6 #include<string.h>
//    7 #include "Coordinator.h"
//    8 #include "DebugTrace.h"
//    9 
//   10 #if !defined( WIN32 )
//   11   #include "OnBoard.h"
//   12 #endif
//   13 
//   14 /* HAL */
//   15 #include "hal_lcd.h"
//   16 #include "hal_led.h"
//   17 #include "hal_key.h"
//   18 #include "hal_uart.h"
//   19 #define SEND_DATA_EVENT  0x02
//   20 
//   21 #define SPI_MGR_ZAPP_RX_READY 0x00
//   22 typedef struct RFTXBUF
//   23 { 
//   24     uint8 myNWK[4];   //ÍøÂçµØÖ·
//   25     uint8 pNWK[4];    //¸¸½ÚµãÍøÂçµØÖ·
//   26     uint8 myMAC[16];
//   27     uint8 pMAC[16];
//   28 }RFTX;
//   29 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//   30 const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS] =
GenericApp_ClusterList:
        DW 1
//   31 {
//   32   GENERICAPP_CLUSTERID
//   33 };
//   34 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   35 const SimpleDescriptionFormat_t GenericApp_SimpleDesc =
GenericApp_SimpleDesc:
        DB 10
        DATA16
        DW 3844
        DW 1
        DATA8
        DB 0
        DB 1
        DATA16
        DW GenericApp_ClusterList
        DATA8
        DB 1
        DATA16
        DW GenericApp_ClusterList
//   36 {
//   37   GENERICAPP_ENDPOINT,              //  int Endpoint;
//   38   GENERICAPP_PROFID,                //  uint16 AppProfId[2];
//   39   GENERICAPP_DEVICEID,              //  uint16 AppDeviceId[2];
//   40   GENERICAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
//   41   GENERICAPP_FLAGS,                 //  int   AppFlags:4;
//   42   GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//   43   (cId_t *)GenericApp_ClusterList,  //  byte *pAppInClusterList;
//   44   // 0,
//   45   //(cId_t *)NULL
//   46   GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//   47   (cId_t *)GenericApp_ClusterList   //  byte *pAppInClusterList;
//   48 };
//   49 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   50 endPointDesc_t GenericApp_epDesc;
GenericApp_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z
//   51 
//   52 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   53 byte GenericApp_TaskID;   // Task ID for internal task/event processing
GenericApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   54                           // This variable will be received when
//   55                           // GenericApp_Init() is called.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   56 devStates_t GenericApp_NwkState;
GenericApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   57 
//   58 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   59 byte GenericApp_TransID;  // This is the unique message ID (counter)
GenericApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   60 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   61 afAddrType_t GenericApp_DstAddr;
GenericApp_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z
//   62 
//   63 
//   64 
//   65 void GenericApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
//   66 //void GenericApp_SendTheMessage( void );
//   67 //void To_string(uint8 *dest,char *src,uint8 length);

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   68 void GenericApp_Init( byte task_id )
GenericApp_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function GenericApp_Init
        CODE
//   69 {
        FUNCALL GenericApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_Init, HalUARTOpen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 29
        MOV     A,#-0x1d
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,R1
//   70   GenericApp_TaskID = task_id;
        MOV     DPTR,#GenericApp_TaskID
        MOVX    @DPTR,A
//   71   GenericApp_NwkState = DEV_INIT;
        MOV     DPTR,#GenericApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//   72   GenericApp_TransID = 0;
        MOV     DPTR,#GenericApp_TransID
        CLR     A
        MOVX    @DPTR,A
//   73 
//   74   // Device hardware initialization can be added here or in main() (Zmain.c).
//   75   // If the hardware is application specific - add it here.
//   76   // If the hardware is other parts of the device add it in main().
//   77 
//   78   /*GenericApp_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
//   79   GenericApp_DstAddr.endPoint =GENERICAPP_ENDPOINT;
//   80   GenericApp_DstAddr.addr.shortAddr = 0x0000;*/
//   81  
//   82   // Fill out the endpoint description.
//   83   GenericApp_epDesc.endPoint = GENERICAPP_ENDPOINT;
        MOV     DPTR,#GenericApp_epDesc
        MOV     A,#0xa
        MOVX    @DPTR,A
//   84   GenericApp_epDesc.task_id = &GenericApp_TaskID;
        INC     DPTR
        MOV     A,#GenericApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//   85   GenericApp_epDesc.simpleDesc
//   86             = (SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
        INC     DPTR
        MOV     A,#GenericApp_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//   87   GenericApp_epDesc.latencyReq = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   88 
//   89   // Register the endpoint description with the AF
//   90   afRegister( &GenericApp_epDesc );
        ; Setup parameters for call to function afRegister
        MOV     R2,#GenericApp_epDesc & 0xff
        MOV     R3,#(GenericApp_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//   91   halUARTCfg_t uartConfig;
//   92   //HalUARTCfg_t uartConfig;
//   93   uartConfig.configured   =TRUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        MOVX    @DPTR,A
//   94   uartConfig.baudRate     =HAL_UART_BR_115200;
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x4
        MOVX    @DPTR,A
//   95   uartConfig.flowControl  =FALSE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//   96   uartConfig.callBackFunc =NULL;
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//   97   HalUARTOpen(0,&uartConfig);
        ; Setup parameters for call to function HalUARTOpen
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,A
        LCALL   ??HalUARTOpen?relay
//   98 }
        MOV     A,#0x1d
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 9)
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//   99 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  100 UINT16 GenericApp_ProcessEvent( byte task_id, UINT16 events )
GenericApp_ProcessEvent:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function GenericApp_ProcessEvent
        CODE
//  101 {
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, GenericApp_MessageMSGCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  102   afIncomingMSGPacket_t *MSGpkt;
//  103   
//  104   if ( events & SYS_EVENT_MSG )
        MOV     A,R3
        ANL     A,#0x80
        JZ      ??GenericApp_ProcessEvent_0
//  105   {
//  106     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??GenericApp_ProcessEvent_1
//  107     while ( MSGpkt )
//  108     {
//  109       switch ( MSGpkt->hdr.event )
//  110       {
//  111        /* case ZDO_CB_MSG:
//  112           GenericApp_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
//  113           break;
//  114           
//  115         case KEY_CHANGE:
//  116           GenericApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
//  117           break;
//  118 
//  119         case AF_DATA_CONFIRM_CMD:
//  120           // This message is received as a confirmation of a data packet sent.
//  121           // The status is of ZStatus_t type [defined in ZComDef.h]
//  122           // The message fields are defined in AF.h
//  123           afDataConfirm = (afDataConfirm_t *)MSGpkt;
//  124           sentEP = afDataConfirm->endpoint;
//  125           sentStatus = afDataConfirm->hdr.status;
//  126           sentTransID = afDataConfirm->transID;
//  127           (void)sentEP;
//  128           (void)sentTransID;
//  129 
//  130           // Action taken when confirmation is received.
//  131           if ( sentStatus != ZSuccess )
//  132           {
//  133             // The data wasn't delivered -- Do something
//  134           }
//  135           break;
//  136 */
//  137         case AF_INCOMING_MSG_CMD:
//  138           GenericApp_MessageMSGCB( MSGpkt );
//  139           break;  
//  140 
//  141         case ZDO_STATE_CHANGE:
//  142           GenericApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
??GenericApp_ProcessEvent_2:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#GenericApp_NwkState
        MOVX    @DPTR,A
//  143           if (GenericApp_NwkState == DEV_END_DEVICE) 
        XRL     A,#0x6
        JNZ     ??GenericApp_ProcessEvent_3
//  144           { 
//  145             HalLedSet(HAL_LED_1,HAL_LED_MODE_ON);//¼ÓÈëÍøÂçºóÁÁµÆ
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x1
        LCALL   ??HalLedSet?relay
//  146             osal_set_event(GenericApp_TaskID,SEND_DATA_EVENT);
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x2
        MOV     R3,#0x0
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_set_event?relay
//  147              
//  148           }
//  149           break;
//  150 
//  151         default:
//  152           break;
//  153       }
//  154 
//  155       // Release the memory
//  156       osal_msg_deallocate( (uint8 *)MSGpkt );//ÊÍ·ÅÄÚ´æ
??GenericApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_msg_deallocate?relay
//  157 
//  158       // Next
//  159       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??GenericApp_ProcessEvent_1:
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        MOV     A,R6
        ORL     A,R7
        JZ      ??GenericApp_ProcessEvent_4
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,#-0x1a
        JZ      ??GenericApp_ProcessEvent_5
        ADD     A,#0x49
        JZ      ??GenericApp_ProcessEvent_2
        SJMP    ??GenericApp_ProcessEvent_3
??GenericApp_ProcessEvent_5:
        ; Setup parameters for call to function GenericApp_MessageMSGCB
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??GenericApp_MessageMSGCB?relay
        SJMP    ??GenericApp_ProcessEvent_3
//  160     }
//  161 
//  162     // return unprocessed events
//  163     return (events ^ SYS_EVENT_MSG);
??GenericApp_ProcessEvent_4:
        MOV     R2,?V0 + 0
        MOV     A,?V0 + 1
        XRL     A,#0x80
        MOV     R3,A
        SJMP    ??GenericApp_ProcessEvent_6
//  164   }
//  165 
//  166  if ( events & SEND_DATA_EVENT )
??GenericApp_ProcessEvent_0:
        MOV     A,R2
        ANL     A,#0x2
        JZ      ??GenericApp_ProcessEvent_7
//  167   {
//  168     // Send "the" message
//  169     //GenericApp_SendTheMessage();//·¢ËÍÊý¾Ý¸ø´®¿Ú
//  170 
//  171     // Setup to send message again
//  172     ///osal_start_timerEx( GenericApp_TaskID,SEND_DATA_EVENT,5000 );
//  173   return( events & SEND_DATA_EVENT );
        MOV     A,R2
        ANL     A,#0x2
        MOV     R2,A
        SJMP    ??GenericApp_ProcessEvent_8
//  174   }
//  175   return 0;
??GenericApp_ProcessEvent_7:
        MOV     R2,#0x0
??GenericApp_ProcessEvent_8:
        MOV     R3,#0x0
??GenericApp_ProcessEvent_6:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  176 }
//  177 
//  178 /*ÀûÓÃNLME.hÀïÃæ¶¨ÒåµÄ×¨ÃÅAPI
//  179 »ñÈ¡Éè±¸×ÔÉíMACµØÖ· ·µ»ØÖ¸Ïò¸Ã½ÚµãMACµØÖ·µÄÖ¸Õë
//  180 extern byte *NLME_GetExtAddr( void );
//  181 
//  182 »ñÈ¡Éè±¸×ÔÉíÍøÂçµØÖ·
//  183 extern uint16 NLME_GetShortAddr( void );
//  184 
//  185 »ñÈ¡¸¸Éè±¸ÍøÂçµØÖ·    
//  186 extern uint16 NLME_GetCoordShortAddr( void );
//  187 
//  188 ¸Ãº¯ÊýµÄ²ÎÊýÊÇÖ¸Ïò´æ·Å¸¸½ÚµãµÄMACµØÖ·µÄ»º³åÇøµÄÖ¸Õë
//  189 extern void NLME_GetCoordExtAddr( byte * buf);*/
//  190 /*void GenericApp_SendTheMessage( void )
//  191 { 
//  192   RFTX rftx;
//  193   uint8 buf[8];
//  194   uint8 lineFeed[2] = {0x0A,0x0D};        //´®¿ÚÊä³ö»»ÐÐ
//  195   uint16 nwk;
//  196   
//  197   nwk = NLME_GetShortAddr();             //×ÔÉíÍøÂçµØÖ· ZDApp.c 856line
//  198   To_string(rftx.myNWK,(uint8 *)&nwk,2); //uint8*4 uint16 = uint8*2
//  199   To_string(rftx.myMAC,NLME_GetExtAddr(),8);
//  200   
//  201   nwk = NLME_GetCoordShortAddr();        //»ñÈ¡¸¸Éè±¸ÍøÂçµØÖ·  ZDApp.c 2225line
//  202   To_string(rftx.pNWK,(uint8 *)&nwk,2);
//  203   
//  204   NLME_GetCoordExtAddr(buf);             //»ñÈ¡¸¸Éè±¸MACµØÖ·
//  205   To_string(rftx.pMAC,buf,8);
//  206   
//  207   
//  208   HalUARTWrite(0,"myNWK:",osal_strlen("myNWK:"));
//  209   HalUARTWrite(0,rftx.myNWK,4);
//  210   HalUARTWrite(0,lineFeed,2);
//  211   
//  212   HalUARTWrite(0,"myMAC:",osal_strlen("myMAC:"));
//  213   HalUARTWrite(0,rftx.myMAC,16);
//  214   HalUARTWrite(0,lineFeed,2);
//  215   
//  216   HalUARTWrite(0,"parentNWK:",osal_strlen("parentNWK:"));
//  217   HalUARTWrite(0,rftx.myNWK,4);
//  218   HalUARTWrite(0,lineFeed,2);
//  219   
//  220   HalUARTWrite(0,"parentMAC:",osal_strlen("parentMAC:"));
//  221   HalUARTWrite(0,rftx.pMAC,16);
//  222   HalUARTWrite(0,lineFeed,2);
//  223  
//  224 }*/
//  225  /* if(GenericApp_NwkState == DEV_END_DEVICE)             //ÅÐ¶ÏÊÇ·ñÎªÖÕ¶Ë½Úµã
//  226   {
//  227       osal_memcpy(rftx.type,"END",3);//Ä¿µÄ Ô´ Êý
//  228   }
//  229    if(GenericApp_NwkState == DEV_ROUTER)                 //ÅÐ¶ÏÊÇ·ñÊÇÂ·ÓÉÆ÷
//  230   {
//  231       osal_memcpy(rftx.type,"ROU",3);
//  232   }*/
//  233   
//  234   
//  235   /*nwk = NLME_GetShortAddr();          //×ÔÉíÍøÂçµØÖ· ZDApp.c 856line
//  236   To_string(rftx.myNWK,(uint8 *)&nwk,2);//½«ÊýÖµ×ª»¯Îª×Ö·û´®¡£·µ»Ø¶ÔÓ¦µÄ×Ö·û´®¡£
//  237   
//  238   nwk = NLME_GetCoordShortAddr();     //»ñÈ¡¸¸Éè±¸ÍøÂçµØÖ·  ZDApp.c 2225line
//  239   To_string(rftx.pNWK,(uint8 *)&nwk,2);
//  240   
//  241   nwk = NLME_GetExtAddr();          //×ÔÉíMACµØÖ·ZDApp.c 255line
//  242   To_string(rftx.myNWK,(uint8 *)&nwk,2);
//  243   
//  244   nwk = NLME_GetCoordExtAddr();             //»ñÈ¡¸¸Éè±¸MACµØÖ·
//  245   To_string(rftx.myNWK,(uint8 *)&nwk,2);
//  246   //·¢ËÍ¸øÐ­µ÷Æ÷*/
//  247 
//  248   /*AF_DataRequest( &GenericApp_DstAddr, &GenericApp_epDesc,
//  249                        GENERICAPP_CLUSTERID,
//  250                        11,
//  251                        (uint8 *)&rftx,
//  252                        &GenericApp_TransID,
//  253                        AF_DISCV_ROUTE, 
//  254                        AF_DEFAULT_RADIUS ) ;*/
//  255 
//  256 
//  257 /*************************************************************************
//  258 *uint16 NLME_GetShortAddr(void)º¯ÊýµÄ·µ»ØÖµÎª¸Ã½Úµã16Î»¶þ½øÖÆÊýµÄÍøÂçµØÖ·¡£
//  259 *Èç¹ûÐèÒª½«Õâ¸öÍøÂçµØÖ·Í¨¹ý´®¿ÚÔÚPC»úÉÏÒÔ×Ö·ûÐÎÊ½³ÊÏÖ¾ÍÐèÒª½èÖúÓÚ¶þ½øÖÆ
//  260 *Êý¾Ý×ª»»Îª×Ö·û´®µÄº¯Êý
//  261 ***************************************************************************/
//  262 //½«ÊýÖµ×ª»¯Îª×Ö·û´®¡£·µ»Ø¶ÔÓ¦µÄ×Ö·û´®¡£
//  263 /*void To_string(uint8 *dest,char *src,uint8 length)
//  264 {
//  265     uint8 *xad;
//  266     uint8 i=0;
//  267     uint8 ch;
//  268     xad = src + length-1;
//  269     for(i=0;i<length;i++,xad--)
//  270     {
//  271         ch=(*xad >> 4) & 0x0F;//³ýÓÚÊ®Áù
//  272         dest[i<<1] = ch + ((ch<10) ? '0' : '7');
//  273         ch = *xad & 0x0F;
//  274         dest[(i<<1) + 1] = ch + ((ch<10) ? '0' : '7');
//  275     }
//  276 }
//  277  
//  278   
//  279   char theMessageData[4] = "LED";
//  280 
//  281    AF_DataRequest( &GenericApp_DstAddr, &GenericApp_epDesc,
//  282                        GENERICAPP_CLUSTERID,
//  283                        (byte)osal_strlen( theMessageData ) + 1,
//  284                        (byte *)&theMessageData,
//  285                        &GenericApp_TransID,
//  286                        AF_DISCV_ROUTE, AF_DEFAULT_RADIUS ) ;
//  287   HalLedBlink(HAL_LED_2,0,50,500);*/
//  288 
//  289 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  290 void GenericApp_MessageMSGCB(afIncomingMSGPacket_t *pkt )
GenericApp_MessageMSGCB:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function GenericApp_MessageMSGCB
        CODE
//  291 {
        FUNCALL GenericApp_MessageMSGCB, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, osal_memcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
//  292   char buf[7];
//  293   switch(pkt->clusterId)
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??GenericApp_MessageMSGCB_0
        INC     DPTR
        MOVX    A,@DPTR
??GenericApp_MessageMSGCB_0:
        JNZ     ??GenericApp_MessageMSGCB_1
//  294   {
//  295   case (GENERICAPP_CLUSTERID):
//  296     osal_memcpy(buf,pkt -> cmd.Data,7);
        ; Setup parameters for call to function osal_memcpy
        MOV     A,R2
        ADD     A,#0x21
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R4,#0x7
        MOV     R5,#0x0
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
//  297      if(osal_memcmp(buf,"LED_ON",7))
        ; Setup parameters for call to function osal_memcmp
        MOV     ?V0 + 0,#`?<Constant "LED_ON">` & 0xff
        MOV     ?V0 + 1,#(`?<Constant "LED_ON">` >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R4,#0x7
        MOV     R5,#0x0
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     R3,#0x0
        LCALL   ??osal_memcmp?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R1
        JZ      ??GenericApp_MessageMSGCB_1
//  298      {
//  299       HalLedSet(HAL_LED_2,HAL_LED_MODE_ON); 
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x2
        LCALL   ??HalLedSet?relay
//  300      }
//  301   }
//  302 }
??GenericApp_MessageMSGCB_1:
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 11)
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_MessageMSGCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_MessageMSGCB

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "LED_ON">`:
        DB "LED_ON"

        END
// 
// 365 bytes in segment BANKED_CODE
//  18 bytes in segment BANK_RELAYS
//  21 bytes in segment XDATA_ROM_C
//  21 bytes in segment XDATA_Z
// 
// 383 bytes of CODE  memory
//  21 bytes of CONST memory
//  21 bytes of XDATA memory
//
//Errors: none
//Warnings: none
