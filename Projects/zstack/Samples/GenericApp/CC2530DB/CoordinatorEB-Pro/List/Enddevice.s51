///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        19/Dec/2018  21:52:53 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×ÊÁ /
//                          Ï\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0- /
//                          1.4.0\Projects\zstack\Samples\GenericApp\CC2530DB /
//                          \Enddevice.c                                      /
//    Command line       =  -f "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿ /
//                          Î×ÊÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2. /
//                          3.0-1.4.0\Projects\zstack\Samples\GenericApp\CC25 /
//                          30DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"        /
//                          (-DCPU32MHZ -DROOT=__near_func                    /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f      /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\Tools\CC2530DB\f8wConfig.cfg"          /
//                          (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR     /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "E:\work\2018ÄêÇï\2016¼¶ZI /
//                          GBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×ÊÁÏ\Êý¾Ý´«Êä\Texas          /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\Enddevice.c" -D  /
//                          ZIGBEEPRO -D ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC   /
//                          -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC         /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\CoordinatorEB-Pro\List\" -lA                    /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\CoordinatorEB-Pro\List\" --diag_suppress        /
//                          Pe001,Pa010 -o "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î /
//                          ¿Î¼þ\13ÖÜÉÏ¿Î×ÊÁÏ\Êý¾Ý´«Êä\Texas                  /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\CoordinatorEB-Pr /
//                          o\Obj\" -e --debug --core=plain --dptr=16,1       /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿ /
//                          Î×ÊÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2. /
//                          3.0-1.4.0\Projects\zstack\Samples\GenericApp\CC25 /
//                          30DB\" -I "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\ /
//                          13ÖÜÉÏ¿Î×ÊÁÏ\Êý¾Ý´«Êä\Texas                       /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\GenericApp\CC2530DB\..\SOURCE\" -I   /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\ZMAIN\TI2530DB\" -I                    /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\MT\" -I               /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\" -I      /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\" /
//                           -I "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ /
//                          ¿Î×ÊÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2 /
//                          .3.0-1.4.0\Projects\zstack\Samples\GenericApp\CC2 /
//                          530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\"  /
//                          -I "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿ /
//                          Î×ÊÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2. /
//                          3.0-1.4.0\Projects\zstack\Samples\GenericApp\CC25 /
//                          30DB\..\..\..\..\..\COMPONENTS\OSAL\INCLUDE\" -I  /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\AF\" -I         /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\NWK\" -I        /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\SEC\" -I        /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\SAPI\" -I       /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\SYS\" -I        /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\ZDO\" -I        /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\ZMAC\F8W\" -I         /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\ZMAC\" -I             /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\SERVICES\SADDR\" -I   /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\SERVICES\SDATA\" -I   /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\MAC\INCLUDE\" -I      /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\" -I   /
//                          "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×Ê /
//                          ÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0 /
//                          -1.4.0\Projects\zstack\Samples\GenericApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\" /
//                           -I "E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ /
//                          ¿Î×ÊÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2 /
//                          .3.0-1.4.0\Projects\zstack\Samples\GenericApp\CC2 /
//                          530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf /
//                          04\SINGLE_CHIP\" -Ohz --require_prototypes        /
//    List file          =  E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×ÊÁ /
//                          Ï\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0- /
//                          1.4.0\Projects\zstack\Samples\GenericApp\CC2530DB /
//                          \CoordinatorEB-Pro\List\Enddevice.s51             /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Enddevice

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??GenericApp_Init?relay
        FUNCTION ??GenericApp_Init?relay,0203H
        PUBLIC ??GenericApp_ProcessEvent?relay
        FUNCTION ??GenericApp_ProcessEvent?relay,0203H
        PUBLIC ??GenericApp_SendTheMessage?relay
        FUNCTION ??GenericApp_SendTheMessage?relay,0203H
        PUBLIC GenericApp_ClusterList
        PUBLIC GenericApp_DstAddr
        PUBLIC GenericApp_Init
        FUNCTION GenericApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC GenericApp_NwkState
        PUBLIC GenericApp_ProcessEvent
        FUNCTION GenericApp_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC GenericApp_SendTheMessage
        FUNCTION GenericApp_SendTheMessage,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC GenericApp_SimpleDesc
        PUBLIC GenericApp_TaskID
        PUBLIC GenericApp_TransID
        PUBLIC GenericApp_epDesc
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
afRegister          SYMBOL "afRegister"
osal_msg_receive    SYMBOL "osal_msg_receive"
osal_set_event      SYMBOL "osal_set_event"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
osal_strlen         SYMBOL "osal_strlen"
AF_DataRequest      SYMBOL "AF_DataRequest"
HalLedBlink         SYMBOL "HalLedBlink"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??HalLedBlink?relay SYMBOL "?relay", HalLedBlink
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_set_event?relay SYMBOL "?relay", osal_set_event
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
??osal_strlen?relay SYMBOL "?relay", osal_strlen
GenericApp_Init     SYMBOL "GenericApp_Init"
??GenericApp_Init?relay SYMBOL "?relay", GenericApp_Init
GenericApp_ProcessEvent SYMBOL "GenericApp_ProcessEvent"
??GenericApp_ProcessEvent?relay SYMBOL "?relay", GenericApp_ProcessEvent
GenericApp_SendTheMessage SYMBOL "GenericApp_SendTheMessage"
??GenericApp_SendTheMessage?relay SYMBOL "?relay", GenericApp_SendTheMessage

        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_strlen
        FUNCTION osal_strlen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedBlink
        FUNCTION HalLedBlink,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??HalLedBlink?relay
        FUNCTION ??HalLedBlink?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_set_event?relay
        FUNCTION ??osal_set_event?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??osal_strlen?relay
        FUNCTION ??osal_strlen?relay,00H

// E:\work\2018ÄêÇï\2016¼¶ZIGBEEÉÏ¿Î¿Î¼þ\13ÖÜÉÏ¿Î×ÊÁÏ\Êý¾Ý´«Êä\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\GenericApp\CC2530DB\Enddevice.c
//    1 #include "OSAL.h"
//    2 #include "AF.h"
//    3 #include "ZDApp.h"
//    4 #include "ZDObject.h"
//    5 #include "ZDProfile.h"
//    6 
//    7 #include "Coordinator.h"
//    8 #include "DebugTrace.h"
//    9 
//   10 #if !defined( WIN32 )
//   11   #include "OnBoard.h"
//   12 #endif
//   13 
//   14 /* HAL */
//   15 #include "hal_lcd.h"
//   16 #include "hal_led.h"
//   17 #include "hal_key.h"
//   18 #include "hal_uart.h"
//   19 #define SEND_DATA_EVENT  0x02

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//   20 const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS] =
GenericApp_ClusterList:
        DW 1
//   21 {
//   22   GENERICAPP_CLUSTERID
//   23 };
//   24 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   25 const SimpleDescriptionFormat_t GenericApp_SimpleDesc =
GenericApp_SimpleDesc:
        DB 10
        DATA16
        DW 3844
        DW 1
        DATA8
        DB 0
        DB 1
        DATA16
        DW GenericApp_ClusterList
        DATA8
        DB 1
        DATA16
        DW GenericApp_ClusterList
//   26 {
//   27   GENERICAPP_ENDPOINT,              //  int Endpoint;
//   28   GENERICAPP_PROFID,                //  uint16 AppProfId[2];
//   29   GENERICAPP_DEVICEID,              //  uint16 AppDeviceId[2];
//   30   GENERICAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
//   31   GENERICAPP_FLAGS,                 //  int   AppFlags:4;
//   32   GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//   33   (cId_t *)GenericApp_ClusterList,  //  byte *pAppInClusterList;
//   34   GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//   35   (cId_t *)GenericApp_ClusterList   //  byte *pAppInClusterList;
//   36 };
//   37 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   38 endPointDesc_t GenericApp_epDesc;
GenericApp_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z
//   39 
//   40 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   41 byte GenericApp_TaskID;   // Task ID for internal task/event processing
GenericApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   42                           // This variable will be received when
//   43                           // GenericApp_Init() is called.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   44 devStates_t GenericApp_NwkState;
GenericApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   45 
//   46 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   47 byte GenericApp_TransID;  // This is the unique message ID (counter)
GenericApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   48 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   49 afAddrType_t GenericApp_DstAddr;
GenericApp_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z
//   50 
//   51 
//   52 void GenericApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
//   53 void GenericApp_SendTheMessage( void );
//   54 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   55 void GenericApp_Init( byte task_id )
GenericApp_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function GenericApp_Init
        CODE
//   56 {
        FUNCALL GenericApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//   57   GenericApp_TaskID = task_id;
        MOV     DPTR,#GenericApp_TaskID
        MOVX    @DPTR,A
//   58   GenericApp_NwkState = DEV_INIT;
        MOV     DPTR,#GenericApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//   59   GenericApp_TransID = 0;
        MOV     DPTR,#GenericApp_TransID
        CLR     A
        MOVX    @DPTR,A
//   60 
//   61   // Device hardware initialization can be added here or in main() (Zmain.c).
//   62   // If the hardware is application specific - add it here.
//   63   // If the hardware is other parts of the device add it in main().
//   64 
//   65   GenericApp_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
        MOV     DPTR,#GenericApp_DstAddr + 8
        MOV     A,#0x2
        MOVX    @DPTR,A
//   66   GenericApp_DstAddr.endPoint =GENERICAPP_ENDPOINT;
        INC     DPTR
        MOV     A,#0xa
        MOVX    @DPTR,A
//   67   GenericApp_DstAddr.addr.shortAddr = 0x0000;
        MOV     DPTR,#GenericApp_DstAddr
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//   68 
//   69   // Fill out the endpoint description.
//   70   GenericApp_epDesc.endPoint = GENERICAPP_ENDPOINT;
        MOV     DPTR,#GenericApp_epDesc
        MOV     A,#0xa
        MOVX    @DPTR,A
//   71   GenericApp_epDesc.task_id = &GenericApp_TaskID;
        INC     DPTR
        MOV     A,#GenericApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//   72   GenericApp_epDesc.simpleDesc
//   73             = (SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
        INC     DPTR
        MOV     A,#GenericApp_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//   74   GenericApp_epDesc.latencyReq = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   75 
//   76   // Register the endpoint description with the AF
//   77   afRegister( &GenericApp_epDesc );
        ; Setup parameters for call to function afRegister
        MOV     R2,#GenericApp_epDesc & 0xff
        MOV     R3,#(GenericApp_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//   78 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//   79 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   80 UINT16 GenericApp_ProcessEvent( byte task_id, UINT16 events )
GenericApp_ProcessEvent:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function GenericApp_ProcessEvent
        CODE
//   81 {
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, GenericApp_SendTheMessage
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//   82   afIncomingMSGPacket_t *MSGpkt;
//   83   
//   84   if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JZ      ??GenericApp_ProcessEvent_0
//   85   {
//   86     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??GenericApp_ProcessEvent_1
//   87     while ( MSGpkt )
//   88     {
//   89       switch ( MSGpkt->hdr.event )
??GenericApp_ProcessEvent_2:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        XRL     A,#0xd1
        JNZ     ??GenericApp_ProcessEvent_3
//   90       {
//   91        /* case ZDO_CB_MSG:
//   92           GenericApp_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
//   93           break;
//   94           
//   95         case KEY_CHANGE:
//   96           GenericApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
//   97           break;
//   98 
//   99         case AF_DATA_CONFIRM_CMD:
//  100           // This message is received as a confirmation of a data packet sent.
//  101           // The status is of ZStatus_t type [defined in ZComDef.h]
//  102           // The message fields are defined in AF.h
//  103           afDataConfirm = (afDataConfirm_t *)MSGpkt;
//  104           sentEP = afDataConfirm->endpoint;
//  105           sentStatus = afDataConfirm->hdr.status;
//  106           sentTransID = afDataConfirm->transID;
//  107           (void)sentEP;
//  108           (void)sentTransID;
//  109 
//  110           // Action taken when confirmation is received.
//  111           if ( sentStatus != ZSuccess )
//  112           {
//  113             // The data wasn't delivered -- Do something
//  114           }
//  115           break;
//  116 
//  117         case AF_INCOMING_MSG_CMD:
//  118           GenericApp_MessageMSGCB( MSGpkt );
//  119           break;  */
//  120 
//  121         case ZDO_STATE_CHANGE:
//  122           GenericApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#GenericApp_NwkState
        MOVX    @DPTR,A
//  123           if (GenericApp_NwkState == DEV_END_DEVICE) 
        XRL     A,#0x6
        JNZ     ??GenericApp_ProcessEvent_3
//  124           { 
//  125             osal_set_event(GenericApp_TaskID,SEND_DATA_EVENT);
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x2
        MOV     R3,#0x0
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_set_event?relay
//  126             
//  127           }
//  128           break;
//  129 
//  130         default:
//  131           break;
//  132       }
//  133 
//  134       // Release the memory
//  135       osal_msg_deallocate( (uint8 *)MSGpkt );
??GenericApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_msg_deallocate?relay
//  136 
//  137       // Next
//  138       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??GenericApp_ProcessEvent_1:
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  139     }
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??GenericApp_ProcessEvent_2
//  140 
//  141     // return unprocessed events
//  142     return (events ^ SYS_EVENT_MSG);
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        XRL     A,#0x80
        MOV     R3,A
        SJMP    ??GenericApp_ProcessEvent_4
//  143   }
//  144 
//  145  if ( events & SEND_DATA_EVENT )
??GenericApp_ProcessEvent_0:
        MOV     A,R6
        ANL     A,#0x2
        JZ      ??GenericApp_ProcessEvent_5
//  146   {
//  147     // Send "the" message
//  148     GenericApp_SendTheMessage();
        ; Setup parameters for call to function GenericApp_SendTheMessage
        LCALL   ??GenericApp_SendTheMessage?relay
//  149 
//  150     // Setup to send message again
//  151     osal_start_timerEx( GenericApp_TaskID,SEND_DATA_EVENT,1000 );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x18
        MOV     R5,#0x3
        MOV     R2,#0x2
        MOV     R3,#0x0
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  152   return( events & SEND_DATA_EVENT );
        MOV     A,R6
        ANL     A,#0x2
        MOV     R2,A
        SJMP    ??GenericApp_ProcessEvent_6
//  153   }
//  154   return 0;
??GenericApp_ProcessEvent_5:
        MOV     R2,#0x0
??GenericApp_ProcessEvent_6:
        MOV     R3,#0x0
??GenericApp_ProcessEvent_4:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  155 }
//  156 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  157 void GenericApp_SendTheMessage( void )
GenericApp_SendTheMessage:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function GenericApp_SendTheMessage
        CODE
//  158 {
        FUNCALL GenericApp_SendTheMessage, osal_strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_SendTheMessage, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_SendTheMessage, HalLedBlink
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
//  159   char theMessageData[4] = "LED";
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant "LED">` >> 8) & 0xff
        MOV     DPL,#`?<Constant "LED">` & 0xff
        MOV     A,#0x4
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  160 
//  161    AF_DataRequest( &GenericApp_DstAddr, &GenericApp_epDesc,
//  162                        GENERICAPP_CLUSTERID,
//  163                        (byte)osal_strlen( theMessageData ) + 1,
//  164                        (byte *)&theMessageData,
//  165                        &GenericApp_TransID,
//  166                        AF_DISCV_ROUTE, AF_DEFAULT_RADIUS ) ;
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#GenericApp_TransID & 0xff
        MOV     ?V0 + 1,#(GenericApp_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 17)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 19)
        ; Setup parameters for call to function osal_strlen
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_strlen?relay
        MOV     A,R2
        ADD     A,#0x1
        MOV     ?V0 + 0,A
        CLR     A
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     R1,#0x20
        MOV     R4,#GenericApp_epDesc & 0xff
        MOV     R5,#(GenericApp_epDesc >> 8) & 0xff
        MOV     R2,#GenericApp_DstAddr & 0xff
        MOV     R3,#(GenericApp_DstAddr >> 8) & 0xff
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
//  167   HalLedBlink(HAL_LED_2,0,50,500);
        ; Setup parameters for call to function HalLedBlink
        MOV     R4,#-0xc
        MOV     R5,#0x1
        MOV     R3,#0x32
        MOV     R2,#0x0
        MOV     R1,#0x2
        LCALL   ??HalLedBlink?relay
//  168 }
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_SendTheMessage?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_SendTheMessage

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
`?<Constant "LED">`:
        DB "LED"

        END
//  169 
// 
// 340 bytes in segment BANKED_CODE
//  18 bytes in segment BANK_RELAYS
//  18 bytes in segment XDATA_ROM_C
//  21 bytes in segment XDATA_Z
// 
// 358 bytes of CODE  memory
//  18 bytes of CONST memory
//  21 bytes of XDATA memory
//
//Errors: none
//Warnings: none
