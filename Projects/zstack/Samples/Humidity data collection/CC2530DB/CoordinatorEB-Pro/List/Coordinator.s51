///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        08/Dec/2019  01:52:20 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\Coordinator.c                 /
//    Command line       =  -f "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas     /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\..\..\Tools\CC2530DB\f8wCo /
//                          ord.cfg" (-DCPU32MHZ -DROOT=__near_func           /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DZDO_COORDINATOR -DRTR_NWK -DBLINK_LEDS) -f      /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\..\..\Tools\CC2530DB\f8wCo /
//                          nfig.cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0       /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "C:\Users\13911\Desktop\´® /
//                          ¿ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0- /
//                          1.4.0\Projects\zstack\Samples\Humidity data       /
//                          collection\CC2530DB\Coordinator.c" -D ZIGBEEPRO   /
//                          -D ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D          /
//                          MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG -lC            /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\CoordinatorEB-Pro\List\" -lA  /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\CoordinatorEB-Pro\List\"      /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\CoordinatorEB-Pro\Obj\" -e    /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas     /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data collection\CC2530DB\"  /
//                          -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas     /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\SOURCE\" -I                /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I  /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ /
//                          " -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas   /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\HAL /
//                          \INCLUDE\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑ /
//                          é\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro /
//                          jects\zstack\Samples\Humidity data                /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\HAL /
//                          \TARGET\CC2530EB\" -I "C:\Users\13911\Desktop\´®¿ /
//                          ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1 /
//                          .4.0\Projects\zstack\Samples\Humidity data        /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\OSA /
//                          L\MCU\CCSOC\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ /
//                          ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\ /
//                          Projects\zstack\Samples\Humidity data             /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\OSA /
//                          L\INCLUDE\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢Êµ /
//                          Ñé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pr /
//                          ojects\zstack\Samples\Humidity data               /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\AF\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\T /
//                          exas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projec /
//                          ts\zstack\Samples\Humidity data                   /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\NWK\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\ /
//                          Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proje /
//                          cts\zstack\Samples\Humidity data                  /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\SEC\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\ /
//                          Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proje /
//                          cts\zstack\Samples\Humidity data                  /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\SAPI\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé /
//                          \Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proj /
//                          ects\zstack\Samples\Humidity data                 /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\SYS\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\ /
//                          Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proje /
//                          cts\zstack\Samples\Humidity data                  /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\ZDO\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\ /
//                          Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proje /
//                          cts\zstack\Samples\Humidity data                  /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\ZMA /
//                          C\F8W\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\T /
//                          exas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projec /
//                          ts\zstack\Samples\Humidity data                   /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\ZMA /
//                          C\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas /
//                           Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\z /
//                          stack\Samples\Humidity data                       /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\SER /
//                          VICES\SADDR\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ /
//                          ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\ /
//                          Projects\zstack\Samples\Humidity data             /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\SER /
//                          VICES\SDATA\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ /
//                          ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\ /
//                          Projects\zstack\Samples\Humidity data             /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC /
//                          \INCLUDE\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑ /
//                          é\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro /
//                          jects\zstack\Samples\Humidity data                /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC /
//                          \HIGH_LEVEL\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ /
//                          ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\ /
//                          Projects\zstack\Samples\Humidity data             /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC /
//                          \LOW_LEVEL\srf04\" -I "C:\Users\13911\Desktop\´®¿ /
//                          ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1 /
//                          .4.0\Projects\zstack\Samples\Humidity data        /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC /
//                          \LOW_LEVEL\srf04\SINGLE_CHIP\" -Ohz               /
//                          --require_prototypes                              /
//    List file          =  C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\CoordinatorEB-Pro\List\Coordi /
//                          nator.s51                                         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Coordinator

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??GenericApp_Init?relay
        FUNCTION ??GenericApp_Init?relay,0203H
        PUBLIC ??GenericApp_MessageMSGCB?relay
        FUNCTION ??GenericApp_MessageMSGCB?relay,0203H
        PUBLIC ??GenericApp_ProcessEvent?relay
        FUNCTION ??GenericApp_ProcessEvent?relay,0203H
        PUBLIC GenericApp_ClusterList
        PUBLIC GenericApp_DstAddr
        PUBLIC GenericApp_Init
        FUNCTION GenericApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC GenericApp_MessageMSGCB
        FUNCTION GenericApp_MessageMSGCB,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC GenericApp_NwkState
        PUBLIC GenericApp_ProcessEvent
        FUNCTION GenericApp_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC GenericApp_SimpleDesc
        PUBLIC GenericApp_TaskID
        PUBLIC GenericApp_TransID
        PUBLIC GenericApp_epDesc
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
afRegister          SYMBOL "afRegister"
HalUARTOpen         SYMBOL "HalUARTOpen"
osal_msg_receive    SYMBOL "osal_msg_receive"
HalLedSet           SYMBOL "HalLedSet"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
HalUARTWrite        SYMBOL "HalUARTWrite"
Delay_ms            SYMBOL "Delay_ms"
??Delay_ms?relay    SYMBOL "?relay", Delay_ms
??HalLedSet?relay   SYMBOL "?relay", HalLedSet
??HalUARTOpen?relay SYMBOL "?relay", HalUARTOpen
??HalUARTWrite?relay SYMBOL "?relay", HalUARTWrite
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
GenericApp_Init     SYMBOL "GenericApp_Init"
??GenericApp_Init?relay SYMBOL "?relay", GenericApp_Init
GenericApp_MessageMSGCB SYMBOL "GenericApp_MessageMSGCB"
??GenericApp_MessageMSGCB?relay SYMBOL "?relay", GenericApp_MessageMSGCB
GenericApp_ProcessEvent SYMBOL "GenericApp_ProcessEvent"
??GenericApp_ProcessEvent?relay SYMBOL "?relay", GenericApp_ProcessEvent

        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTOpen
        FUNCTION HalUARTOpen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedSet
        FUNCTION HalLedSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTWrite
        FUNCTION HalUARTWrite,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Delay_ms
        FUNCTION Delay_ms,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??Delay_ms?relay
        FUNCTION ??Delay_ms?relay,00H
        EXTERN ??HalLedSet?relay
        FUNCTION ??HalLedSet?relay,00H
        EXTERN ??HalUARTOpen?relay
        FUNCTION ??HalUARTOpen?relay,00H
        EXTERN ??HalUARTWrite?relay
        FUNCTION ??HalUARTWrite?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H

// C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Humidity data collection\CC2530DB\Coordinator.c
//    1 #include "OSAL.h"
//    2 #include "AF.h"
//    3 #include "ZDApp.h"
//    4 #include "ZDObject.h"
//    5 #include "ZDProfile.h"
//    6 #include "DHT11.h"
//    7 #include<string.h>
//    8 
//    9 #include "Coordinator.h"
//   10 #include "DebugTrace.h"
//   11 
//   12 #if !defined( WIN32 )
//   13 #include "OnBoard.h"
//   14 #endif
//   15 
//   16 /* HAL */
//   17 #include "hal_lcd.h"
//   18 #include "hal_led.h"
//   19 #include "hal_key.h"
//   20 #include "hal_uart.h"
//   21 
//   22 /*typedef struct RFTXBUF
//   23 {
//   24     uint8 type[3];    //Éè±¸ÀàÐÍ
//   25     uint8 myNWK[4];   //ÍøÂçµØÖ·
//   26     uint8 pNWK[4];    //¸¸½ÚµãÍøÂçµØÖ·
//   27 }RFTX;*/
//   28 //¸Ã½á¹¹ÌåÓÃÓÚ´æ·Å½Úµã¶ÔµÄÐÅÏ¢£ºÉè±¸ÀàÐÍ£¬ÍøÂçµØÖ·£¬¸¸½ÚµãÍøÂçµØÖ·
//   29 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//   30 const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS] =
GenericApp_ClusterList:
        DW 1
//   31 {
//   32   GENERICAPP_CLUSTERID
//   33 };
//   34 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   35 const SimpleDescriptionFormat_t GenericApp_SimpleDesc =
GenericApp_SimpleDesc:
        DB 10
        DATA16
        DW 3844
        DW 1
        DATA8
        DB 0
        DB 1
        DATA16
        DW GenericApp_ClusterList
        DATA8
        DB 1
        DATA16
        DW GenericApp_ClusterList
//   36 {
//   37   GENERICAPP_ENDPOINT,              //  int Endpoint;
//   38   GENERICAPP_PROFID,                //  uint16 AppProfId[2];
//   39   GENERICAPP_DEVICEID,              //  uint16 AppDeviceId[2];
//   40   GENERICAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
//   41   GENERICAPP_FLAGS,                 //  int   AppFlags:4;
//   42   GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//   43   (cId_t *)GenericApp_ClusterList,  //  byte *pAppInClusterList;
//   44   GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//   45   (cId_t *)GenericApp_ClusterList   //  byte *pAppInClusterList;
//   46   //0,
//   47   //(cId_t *)NULL
//   48 };
//   49 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   50 endPointDesc_t GenericApp_epDesc;
GenericApp_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z
//   51 
//   52  

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   53 byte GenericApp_TaskID;   // Task ID for internal task/event processing
GenericApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   54                           // This variable will be received when
//   55                           // GenericApp_Init() is called.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   56 devStates_t GenericApp_NwkState;
GenericApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   57 
//   58 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   59 byte GenericApp_TransID;  // This is the unique message ID (counter)
GenericApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   60 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   61 afAddrType_t GenericApp_DstAddr;
GenericApp_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z
//   62 //unsigned char uartbuf[128];
//   63 
//   64 /*********************************************************************
//   65  * LOCAL FUNCTIONS
//   66  */
//   67 //void GenericApp_ProcessZDOMsgs( zdoIncomingMsg_t *inMsg );
//   68 //void GenericApp_HandleKeys( byte shift, byte keys );
//   69 void GenericApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
//   70 //void GenericApp_SendTheMessage( void );
//   71 //static void rxCB(uint8 port,uint8 event);

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   72 void GenericApp_Init( byte task_id )
GenericApp_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function GenericApp_Init
        CODE
//   73 { 
        FUNCALL GenericApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_Init, HalUARTOpen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 29
        MOV     A,#-0x1d
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,R1
//   74   halUARTCfg_t uartConfig;
//   75   GenericApp_TaskID = task_id;
        MOV     DPTR,#GenericApp_TaskID
        MOVX    @DPTR,A
//   76   GenericApp_NwkState = DEV_INIT;
        MOV     DPTR,#GenericApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//   77   GenericApp_TransID = 0;
        MOV     DPTR,#GenericApp_TransID
        CLR     A
        MOVX    @DPTR,A
//   78 /*  
//   79   GenericApp_DstAddr.addrMode = (afAddrMode_t)AddrNotPresent;
//   80   GenericApp_DstAddr.endPoint = 0;
//   81   GenericApp_DstAddr.addr.shortAddr = 0;*/
//   82 
//   83   /*GenericApp_DstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
//   84   GenericApp_DstAddr.endPoint = 10;
//   85   GenericApp_DstAddr.addr.shortAddr = 0xFFFF;*/
//   86  
//   87   GenericApp_epDesc.endPoint = GENERICAPP_ENDPOINT;
        MOV     DPTR,#GenericApp_epDesc
        MOV     A,#0xa
        MOVX    @DPTR,A
//   88   GenericApp_epDesc.task_id = &GenericApp_TaskID;
        INC     DPTR
        MOV     A,#GenericApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//   89   GenericApp_epDesc.simpleDesc
//   90             = (SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
        INC     DPTR
        MOV     A,#GenericApp_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//   91   GenericApp_epDesc.latencyReq = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   92 
//   93   // Register the endpoint description with the AF
//   94   afRegister( &GenericApp_epDesc );
        ; Setup parameters for call to function afRegister
        MOV     R2,#GenericApp_epDesc & 0xff
        MOV     R3,#(GenericApp_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//   95   uartConfig.configured   =TRUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        MOVX    @DPTR,A
//   96   uartConfig.baudRate     =HAL_UART_BR_115200;
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x4
        MOVX    @DPTR,A
//   97   uartConfig.flowControl  =FALSE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//   98   uartConfig.callBackFunc =NULL;
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//   99   HalUARTOpen(0,&uartConfig);
        ; Setup parameters for call to function HalUARTOpen
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,A
        LCALL   ??HalUARTOpen?relay
//  100 }
        MOV     A,#0x1d
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock0
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  101 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  102 UINT16 GenericApp_ProcessEvent( byte task_id, UINT16 events )
GenericApp_ProcessEvent:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function GenericApp_ProcessEvent
        CODE
//  103 {
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, GenericApp_MessageMSGCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  104   afIncomingMSGPacket_t *MSGpkt;
//  105   
//  106   if ( events & SYS_EVENT_MSG )
        MOV     A,R3
        ANL     A,#0x80
        JZ      ??GenericApp_ProcessEvent_0
//  107   {
//  108     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??GenericApp_ProcessEvent_1
//  109     while ( MSGpkt )
//  110     {
//  111       switch ( MSGpkt->hdr.event )
//  112       {
//  113        /* case ZDO_CB_MSG:
//  114           GenericApp_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
//  115           break;
//  116           
//  117         case KEY_CHANGE:
//  118           GenericApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
//  119           break;
//  120         case AF_DATA_CONFIRM_CMD:
//  121           // This message is received as a confirmation of a data packet sent.
//  122           // The status is of ZStatus_t type [defined in ZComDef.h]
//  123           // The message fields are defined in AF.h
//  124           afDataConfirm = (afDataConfirm_t *)MSGpkt;
//  125           sentEP = afDataConfirm->endpoint;
//  126           sentStatus = afDataConfirm->hdr.status;
//  127           sentTransID = afDataConfirm->transID;
//  128           (void)sentEP;
//  129           (void)sentTransID;
//  130 
//  131           // Action taken when confirmation is received.
//  132           if ( sentStatus != ZSuccess )
//  133           {
//  134             // The data wasn't delivered -- Do something
//  135           }
//  136           break;*/
//  137 
//  138           //Èç¹û½ÓÊÕµ½ÏûÏ¢
//  139         case AF_INCOMING_MSG_CMD:
//  140           GenericApp_MessageMSGCB( MSGpkt );
//  141           break;  
//  142 
//  143          //¼ÓÈëÍøÂçºó
//  144         case ZDO_STATE_CHANGE:
//  145           GenericApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
??GenericApp_ProcessEvent_2:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#GenericApp_NwkState
        MOVX    @DPTR,A
//  146           if (GenericApp_NwkState == DEV_ZB_COORD) 
        XRL     A,#0x9
        JNZ     ??GenericApp_ProcessEvent_3
//  147           { 
//  148             HalLedSet(HAL_LED_2,HAL_LED_MODE_ON);//¼ÓÈëÍøÂçºóÁÁµÆ
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x2
        LCALL   ??HalLedSet?relay
//  149             
//  150             //osal_set_event(GenericApp_TaskID,SEND_DATA_EVENT);
//  151              
//  152           }
//  153           break;
//  154 
//  155         default:
//  156           break;
//  157       }
//  158 
//  159       // Release the memory
//  160       osal_msg_deallocate( (uint8 *)MSGpkt );//ÊÍ·ÅÄÚ´æ
??GenericApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_msg_deallocate?relay
//  161 
//  162       // Next
//  163       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??GenericApp_ProcessEvent_1:
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        MOV     A,R6
        ORL     A,R7
        JZ      ??GenericApp_ProcessEvent_4
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,#-0x1a
        JZ      ??GenericApp_ProcessEvent_5
        ADD     A,#0x49
        JZ      ??GenericApp_ProcessEvent_2
        SJMP    ??GenericApp_ProcessEvent_3
??GenericApp_ProcessEvent_5:
        ; Setup parameters for call to function GenericApp_MessageMSGCB
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??GenericApp_MessageMSGCB?relay
        SJMP    ??GenericApp_ProcessEvent_3
//  164     }
//  165 
//  166     // return unprocessed events
//  167     return (events ^ SYS_EVENT_MSG);
??GenericApp_ProcessEvent_4:
        MOV     R2,?V0 + 0
        MOV     A,?V0 + 1
        XRL     A,#0x80
        MOV     R3,A
        SJMP    ??GenericApp_ProcessEvent_6
//  168   }
//  169 
//  170 
//  171  /*if ( events & SEND_DATA_EVENT )
//  172   {
//  173     //Humidity_Measure(); //Êª¶ÈµÄ»ñÈ¡
//  174     //½ÓÊÜµ½²É¼¯µÄÊª¶È²¢·¢ËÍÊý¾Ý¸øÐ­µ÷Æ÷
//  175     //GenericApp_SendTheMessage();
//  176     
//  177     // Setup to send message again
//  178     //¶¨Ê±´¥·¢ÊÂ¼þ
//  179     //osal_start_timerEx( GenericApp_TaskID,SEND_DATA_EVENT,5000 );
//  180   return( events & SEND_DATA_EVENT );
//  181   }*/
//  182   return 0;
??GenericApp_ProcessEvent_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??GenericApp_ProcessEvent_6:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
//  183 }
//  184 
//  185 
//  186 //ÏûÏ¢´¦Àíº¯Êý

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  187 void GenericApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
GenericApp_MessageMSGCB:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function GenericApp_MessageMSGCB
        CODE
//  188 {
        FUNCALL GenericApp_MessageMSGCB, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, HalUARTWrite
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, Delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  189   //uint16 humidity;
//  190   switch ( pkt->clusterId )
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??GenericApp_MessageMSGCB_0
        INC     DPTR
        MOVX    A,@DPTR
??GenericApp_MessageMSGCB_0:
        JNZ     ??GenericApp_MessageMSGCB_1
//  191   {
//  192     case GENERICAPP_CLUSTERID: 
//  193       HalLedSet(HAL_LED_1,HAL_LED_MODE_ON);
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x1
        LCALL   ??HalLedSet?relay
//  194       HalUARTWrite(0, &pkt->cmd.Data[0], pkt->cmd.DataLength); 
        ; Setup parameters for call to function HalUARTWrite
        MOV     A,R6
        ADD     A,#0x1f
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0x21
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
//  195       HalUARTWrite(0, "\n", 1);
        ; Setup parameters for call to function HalUARTWrite
        MOV     R4,#0x1
        MOV     R5,#0x0
        MOV     R2,#`?<Constant "\\n">` & 0xff
        MOV     R3,#(`?<Constant "\\n">` >> 8) & 0xff
        MOV     R1,#0x0
        LCALL   ??HalUARTWrite?relay
//  196       Delay_ms(500);
        ; Setup parameters for call to function Delay_ms
        MOV     R2,#-0xc
        MOV     R3,#0x1
        LCALL   ??Delay_ms?relay
//  197       HalLedSet(HAL_LED_1,HAL_LED_MODE_OFF);
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x0
        MOV     R1,#0x1
        LCALL   ??HalLedSet?relay
//  198       //humidity = BUILD_UINT16(pkt->cmd.
//  199       //HalUARTWrite(0,uartbuf,3);
//  200       //osal_memcpy(&nodeinfo[nodenum++],pkt->cmd.Data,11);
//  201       break;
//  202   }
//  203 }
??GenericApp_MessageMSGCB_1:
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock3

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_MessageMSGCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_MessageMSGCB

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
`?<Constant "\\n">`:
        DB "\012"

        END
//  204  /*
//  205 static void rxCB(uint8 port,uint8 event)
//  206 {
//  207   unsigned char changeline[2]={0x0A,0x0D};
//  208   uint8 buf[8];
//  209   uint8 uartbuf[16];
//  210   uint8 i=0;
//  211   HalUARTRead(0,buf,8);
//  212   if(osal_memcmp(buf,"topology",8))
//  213   {
//  214         for(i=0;i<3;i++)
//  215         {
//  216             HalUARTWrite(0,nodeinfo[i].type,3);      //Êä³öÉè±¸ÀàÐÍ
//  217             
//  218             HalUARTWrite(0," NWK: ",6);
//  219             HalUARTWrite(0,nodeinfo[i].myNWK,4);     //Êä³öÍøÂçµØÖ·
//  220             
//  221             HalUARTWrite(0," pNWK: ",7);
//  222             HalUARTWrite(0,nodeinfo[i].pNWK,4);      //Êä³ö¸¸½ÚµãÍøÂçµØÖ·
//  223             
//  224             HalUARTWrite(0,changeline,2);
//  225         }
//  226   }
//  227 }
//  228 /*static void rxCB(uint8 port,uint8 event)
//  229 {
//  230    char theMessageData[7] = "LED_ON";
//  231   HalUARTRead(0,uartbuf,16);
//  232   if(osal_memcmp(uartbuf,"www.wlwmaker.com",16))
//  233   {
//  234       //Ê¹Ð­µ÷Æ÷µÄÁ½¸öµÆÁÁ
//  235         HalLedSet(HAL_LED_1,HAL_LED_MODE_ON);
//  236         HalLedSet(HAL_LED_2,HAL_LED_MODE_ON);
//  237         
//  238         uint16 NLME_GetShortAddr(void)        //·µ»Ø¸Ã½ÚµãµÄÍøÂçµØÖ·
//  239         byte*  NLME_GetExtAddr(void)          //·µ»ØÖ¸Ïò¸Ã½ÚµãMACµØÖ·µÄÖ¸Õë
//  240         uint16 NLME_GetCoordShortAddr(void)   //º¯Êý·µ»Ø¸¸½ÚµãµÄÍøÂçµØÖ·
//  241         void   NLME_GetCoordExtAdd(byte* buf) //¸Ãº¯ÊýµÄ²ÎÊýÊÇÖ¸Ïò´æ·Å¸¸½ÚµãµÄMACµØÖ·µÄ»º³åÖ¸Õë
//  242         
//  243         
//  244         //Í¨¹ý¹ã²¥·¢ËÍÊý¾Ý¸øÖÕ¶Ë
//  245         AF_DataRequest( &GenericApp_DstAddr, &GenericApp_epDesc,
//  246                        GENERICAPP_CLUSTERID,
//  247                        (byte)osal_strlen( theMessageData ) + 1,
//  248                        (byte *)&theMessageData,
//  249                        &GenericApp_TransID,
//  250                        AF_DISCV_ROUTE, AF_DEFAULT_RADIUS ) ;
//  251         /*HalUARTWrite(0,uartbuf,16);
//  252         for(unsigned int i=0;i<6666;i++);*/
//  253       
//  254 
//  255 
//  256 
//  257 
// 
// 313 bytes in segment BANKED_CODE
//  18 bytes in segment BANK_RELAYS
//  16 bytes in segment XDATA_ROM_C
//  21 bytes in segment XDATA_Z
// 
// 331 bytes of CODE  memory
//  16 bytes of CONST memory
//  21 bytes of XDATA memory
//
//Errors: none
//Warnings: 2
