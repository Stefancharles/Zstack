///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        08/Dec/2019  13:24:44 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\Enddevice.c                   /
//    Command line       =  -f "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas     /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\..\..\Tools\CC2530DB\f8wEn /
//                          dev.cfg" (-DCPU32MHZ -DROOT=__near_func           /
//                          -DBLINK_LEDS) -f "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ /
//                          ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\ /
//                          Projects\zstack\Samples\Humidity data             /
//                          collection\CC2530DB\..\..\..\Tools\CC2530DB\f8wCo /
//                          nfig.cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0       /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "C:\Users\13911\Desktop\´® /
//                          ¿ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0- /
//                          1.4.0\Projects\zstack\Samples\Humidity data       /
//                          collection\CC2530DB\Enddevice.c" -D ZIGBEEPRO -D  /
//                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D           /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -lC          /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\EndDeviceEB-Pro\List\" -lA    /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\EndDeviceEB-Pro\List\"        /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\EndDeviceEB-Pro\Obj\" -e      /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas     /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data collection\CC2530DB\"  /
//                          -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas     /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\SOURCE\" -I                /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I  /
//                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas        /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ /
//                          " -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas   /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\HAL /
//                          \INCLUDE\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑ /
//                          é\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro /
//                          jects\zstack\Samples\Humidity data                /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\HAL /
//                          \TARGET\CC2530EB\" -I "C:\Users\13911\Desktop\´®¿ /
//                          ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1 /
//                          .4.0\Projects\zstack\Samples\Humidity data        /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\OSA /
//                          L\MCU\CCSOC\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ /
//                          ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\ /
//                          Projects\zstack\Samples\Humidity data             /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\OSA /
//                          L\INCLUDE\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢Êµ /
//                          Ñé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pr /
//                          ojects\zstack\Samples\Humidity data               /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\AF\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\T /
//                          exas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projec /
//                          ts\zstack\Samples\Humidity data                   /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\NWK\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\ /
//                          Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proje /
//                          cts\zstack\Samples\Humidity data                  /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\SEC\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\ /
//                          Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proje /
//                          cts\zstack\Samples\Humidity data                  /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\SAPI\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé /
//                          \Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proj /
//                          ects\zstack\Samples\Humidity data                 /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\SYS\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\ /
//                          Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proje /
//                          cts\zstack\Samples\Humidity data                  /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STA /
//                          CK\ZDO\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\ /
//                          Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proje /
//                          cts\zstack\Samples\Humidity data                  /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\ZMA /
//                          C\F8W\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\T /
//                          exas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projec /
//                          ts\zstack\Samples\Humidity data                   /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\ZMA /
//                          C\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas /
//                           Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\z /
//                          stack\Samples\Humidity data                       /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\SER /
//                          VICES\SADDR\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ /
//                          ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\ /
//                          Projects\zstack\Samples\Humidity data             /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\SER /
//                          VICES\SDATA\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ /
//                          ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\ /
//                          Projects\zstack\Samples\Humidity data             /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC /
//                          \INCLUDE\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑ /
//                          é\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro /
//                          jects\zstack\Samples\Humidity data                /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC /
//                          \HIGH_LEVEL\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ /
//                          ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\ /
//                          Projects\zstack\Samples\Humidity data             /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC /
//                          \LOW_LEVEL\srf04\" -I "C:\Users\13911\Desktop\´®¿ /
//                          ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1 /
//                          .4.0\Projects\zstack\Samples\Humidity data        /
//                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC /
//                          \LOW_LEVEL\srf04\SINGLE_CHIP\" -Ohz               /
//                          --require_prototypes                              /
//    List file          =  C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         /
//                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zs /
//                          tack\Samples\Humidity data                        /
//                          collection\CC2530DB\EndDeviceEB-Pro\List\Enddevic /
//                          e.s51                                             /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Enddevice

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC ??GenericApp_Init?relay
        FUNCTION ??GenericApp_Init?relay,0203H
        PUBLIC ??GenericApp_MessageMSGCB?relay
        FUNCTION ??GenericApp_MessageMSGCB?relay,0203H
        PUBLIC ??GenericApp_ProcessEvent?relay
        FUNCTION ??GenericApp_ProcessEvent?relay,0203H
        PUBLIC ??GenericApp_SendTheMessage?relay
        FUNCTION ??GenericApp_SendTheMessage?relay,0203H
        PUBLIC GenericApp_ClusterList
        PUBLIC GenericApp_DstAddr
        PUBLIC GenericApp_Init
        FUNCTION GenericApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        PUBLIC GenericApp_MessageMSGCB
        FUNCTION GenericApp_MessageMSGCB,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 25, STACK
        PUBLIC GenericApp_NwkState
        PUBLIC GenericApp_ProcessEvent
        FUNCTION GenericApp_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC GenericApp_SendTheMessage
        FUNCTION GenericApp_SendTheMessage,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 45, STACK
        PUBLIC GenericApp_SimpleDesc
        PUBLIC GenericApp_TaskID
        PUBLIC GenericApp_TransID
        PUBLIC GenericApp_epDesc
        PUBWEAK P0DIR
        PUBWEAK P0SEL
        PUBWEAK _A_P0
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
afRegister          SYMBOL "afRegister"
HalUARTOpen         SYMBOL "HalUARTOpen"
osal_msg_receive    SYMBOL "osal_msg_receive"
HalLedSet           SYMBOL "HalLedSet"
osal_set_event      SYMBOL "osal_set_event"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
DHT11               SYMBOL "DHT11"
Delay_ms            SYMBOL "Delay_ms"
AF_DataRequest      SYMBOL "AF_DataRequest"
osal_memcpy         SYMBOL "osal_memcpy"
osal_memcmp         SYMBOL "osal_memcmp"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??DHT11?relay       SYMBOL "?relay", DHT11
??Delay_ms?relay    SYMBOL "?relay", Delay_ms
??HalLedSet?relay   SYMBOL "?relay", HalLedSet
??HalUARTOpen?relay SYMBOL "?relay", HalUARTOpen
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_memcmp?relay SYMBOL "?relay", osal_memcmp
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_set_event?relay SYMBOL "?relay", osal_set_event
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
GenericApp_Init     SYMBOL "GenericApp_Init"
??GenericApp_Init?relay SYMBOL "?relay", GenericApp_Init
GenericApp_MessageMSGCB SYMBOL "GenericApp_MessageMSGCB"
??GenericApp_MessageMSGCB?relay SYMBOL "?relay", GenericApp_MessageMSGCB
GenericApp_ProcessEvent SYMBOL "GenericApp_ProcessEvent"
??GenericApp_ProcessEvent?relay SYMBOL "?relay", GenericApp_ProcessEvent
GenericApp_SendTheMessage SYMBOL "GenericApp_SendTheMessage"
??GenericApp_SendTheMessage?relay SYMBOL "?relay", GenericApp_SendTheMessage

        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTOpen
        FUNCTION HalUARTOpen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLedSet
        FUNCTION HalLedSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN DHT11
        FUNCTION DHT11,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Delay_ms
        FUNCTION Delay_ms,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcmp
        FUNCTION osal_memcmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??DHT11?relay
        FUNCTION ??DHT11?relay,00H
        EXTERN ??Delay_ms?relay
        FUNCTION ??Delay_ms?relay,00H
        EXTERN ??HalLedSet?relay
        FUNCTION ??HalLedSet?relay,00H
        EXTERN ??HalUARTOpen?relay
        FUNCTION ??HalUARTOpen?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_memcmp?relay
        FUNCTION ??osal_memcmp?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_set_event?relay
        FUNCTION ??osal_set_event?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN shidu_ge
        EXTERN shidu_shi

// C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Humidity data collection\CC2530DB\Enddevice.c
//    1 #include "OSAL.h"
//    2 #include "AF.h"
//    3 #include "ZDApp.h"
//    4 #include "ZDObject.h"
//    5 #include "ZDProfile.h"
//    6 #include<string.h>
//    7 #include "Coordinator.h"
//    8 #include "DebugTrace.h"
//    9 #include "DHT11.h"
//   10 #if !defined( WIN32 )
//   11   #include "OnBoard.h"

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f3H
// unsigned char volatile __sfr P0SEL
P0SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0fdH
// unsigned char volatile __sfr P0DIR
P0DIR:
        DATA8
        DS 1
//   12 #endif
//   13 
//   14 /* HAL Ó²¼þ³éÏó²ã(HAL) */
//   15 #include "hal_lcd.h"
//   16 #include "hal_led.h"
//   17 #include "hal_key.h"
//   18 #include "hal_uart.h"
//   19 #define SEND_DATA_EVENT  0x02
//   20 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//   21 const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS] =
GenericApp_ClusterList:
        DW 1
//   22 {
//   23   GENERICAPP_CLUSTERID
//   24 };
//   25 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   26 const SimpleDescriptionFormat_t GenericApp_SimpleDesc =
GenericApp_SimpleDesc:
        DB 10
        DATA16
        DW 3844
        DW 1
        DATA8
        DB 0
        DB 1
        DATA16
        DW GenericApp_ClusterList
        DATA8
        DB 1
        DATA16
        DW GenericApp_ClusterList
//   27 {
//   28   GENERICAPP_ENDPOINT,              //  int Endpoint;
//   29   GENERICAPP_PROFID,                //  uint16 AppProfId[2];
//   30   GENERICAPP_DEVICEID,              //  uint16 AppDeviceId[2];
//   31   GENERICAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
//   32   GENERICAPP_FLAGS,                 //  int   AppFlags:4;
//   33   GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//   34   (cId_t *)GenericApp_ClusterList,  //  byte *pAppInClusterList;
//   35   GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//   36   (cId_t *)GenericApp_ClusterList   //  byte *pAppInClusterList;
//   37 };
//   38 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   39 endPointDesc_t GenericApp_epDesc;
GenericApp_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z
//   40 
//   41 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   42 byte GenericApp_TaskID;   // Task ID for internal task/event processing
GenericApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   43                           // This variable will be received when
//   44                           // GenericApp_Init() is called.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   45 devStates_t GenericApp_NwkState;
GenericApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   46 
//   47 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   48 byte GenericApp_TransID;  // This is the unique message ID (counter)
GenericApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//   49 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//   50 afAddrType_t GenericApp_DstAddr;
GenericApp_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z
//   51 
//   52 //uint8 *my_strcat(uint8 *str1, uint8 *str2);
//   53 void GenericApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
//   54 void GenericApp_SendTheMessage( void );
//   55 //void To_string(uint8 *dest,char *src,uint8 length);

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   56 void GenericApp_Init( byte task_id )
GenericApp_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function GenericApp_Init
        CODE
//   57 {
        FUNCALL GenericApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_Init, HalUARTOpen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 29
        MOV     A,#-0x1d
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,R1
//   58   GenericApp_TaskID = task_id;
        MOV     DPTR,#GenericApp_TaskID
        MOVX    @DPTR,A
//   59   GenericApp_NwkState = DEV_INIT;
        MOV     DPTR,#GenericApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//   60   GenericApp_TransID = 0;
        MOV     DPTR,#GenericApp_TransID
        CLR     A
        MOVX    @DPTR,A
//   61 
//   62   P0SEL &= ~0x10; //³õÊ¼»¯P0_4µÄÎÂ¶È
        ANL     0xf3,#0xef
//   63   P0DIR |= 0x10;   //0:ÊäÈë  1£ºÊä³ö
        ORL     0xfd,#0x10
//   64   P0_4 = 0;
        CLR     0x80.4
//   65   // Device hardware initialization can be added here or in main() (Zmain.c).
//   66   // If the hardware is application specific - add it here.
//   67   // If the hardware is other parts of the device add it in main().
//   68 
//   69   //ÖÐ¶ÏÉèÖÃÎª¶ÔÐ­µ÷Æ÷µ¥²¥
//   70   GenericApp_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
        MOV     DPTR,#GenericApp_DstAddr + 8
        MOV     A,#0x2
        MOVX    @DPTR,A
//   71   GenericApp_DstAddr.endPoint =GENERICAPP_ENDPOINT;
        INC     DPTR
        MOV     A,#0xa
        MOVX    @DPTR,A
//   72   GenericApp_DstAddr.addr.shortAddr = 0x00;
        MOV     DPTR,#GenericApp_DstAddr
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//   73  
//   74   // Fill out the endpoint description.
//   75   GenericApp_epDesc.endPoint = GENERICAPP_ENDPOINT;
        MOV     DPTR,#GenericApp_epDesc
        MOV     A,#0xa
        MOVX    @DPTR,A
//   76   GenericApp_epDesc.task_id = &GenericApp_TaskID;
        INC     DPTR
        MOV     A,#GenericApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//   77   GenericApp_epDesc.simpleDesc
//   78             = (SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
        INC     DPTR
        MOV     A,#GenericApp_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(GenericApp_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//   79   GenericApp_epDesc.latencyReq = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//   80 
//   81   // Register the endpoint description with the AF
//   82   afRegister( &GenericApp_epDesc );
        ; Setup parameters for call to function afRegister
        MOV     R2,#GenericApp_epDesc & 0xff
        MOV     R3,#(GenericApp_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//   83  
//   84   //´®¿ÚµÄÉèÖÃ
//   85   halUARTCfg_t  uartConfig;
//   86   //HalUARTCfg_t uartConfig;
//   87   uartConfig.configured   =TRUE;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x1
        MOVX    @DPTR,A
//   88   uartConfig.baudRate     =HAL_UART_BR_115200;
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x4
        MOVX    @DPTR,A
//   89   uartConfig.flowControl  =FALSE;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
//   90   uartConfig.callBackFunc =NULL;    
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//   91   HalUARTOpen(0,&uartConfig);
        ; Setup parameters for call to function HalUARTOpen
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,A
        LCALL   ??HalUARTOpen?relay
//   92 }
        MOV     A,#0x1d
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 9)
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
        REQUIRE P0SEL
        REQUIRE P0DIR
        REQUIRE _A_P0
//   93 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   94 UINT16 GenericApp_ProcessEvent( byte task_id, UINT16 events )
GenericApp_ProcessEvent:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function GenericApp_ProcessEvent
        CODE
//   95 {
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, GenericApp_MessageMSGCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, GenericApp_SendTheMessage
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//   96   afIncomingMSGPacket_t *MSGpkt;
//   97   
//   98   if ( events & SYS_EVENT_MSG )
        MOV     A,R3
        ANL     A,#0x80
        JZ      ??GenericApp_ProcessEvent_0
//   99   {
//  100     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??GenericApp_ProcessEvent_1
//  101     while ( MSGpkt )
//  102     {
//  103       switch ( MSGpkt->hdr.event )
//  104       {
//  105        /* case ZDO_CB_MSG:
//  106           GenericApp_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
//  107           break;
//  108           
//  109         case KEY_CHANGE:
//  110           GenericApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
//  111           break;
//  112         case AF_DATA_CONFIRM_CMD:
//  113           // This message is received as a confirmation of a data packet sent.
//  114           // The status is of ZStatus_t type [defined in ZComDef.h]
//  115           // The message fields are defined in AF.h
//  116           afDataConfirm = (afDataConfirm_t *)MSGpkt;
//  117           sentEP = afDataConfirm->endpoint;
//  118           sentStatus = afDataConfirm->hdr.status;
//  119           sentTransID = afDataConfirm->transID;
//  120           (void)sentEP;
//  121           (void)sentTransID;
//  122 
//  123           // Action taken when confirmation is received.
//  124           if ( sentStatus != ZSuccess )
//  125           {
//  126             // The data wasn't delivered -- Do something
//  127           }
//  128           break;*/
//  129 
//  130           //Èç¹û½ÓÊÕµ½ÏûÏ¢
//  131         case AF_INCOMING_MSG_CMD:
//  132           GenericApp_MessageMSGCB( MSGpkt );
//  133           break;  
//  134 
//  135          //¼ÓÈëÍøÂçºó
//  136         case ZDO_STATE_CHANGE:
//  137           GenericApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
??GenericApp_ProcessEvent_2:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#GenericApp_NwkState
        MOVX    @DPTR,A
//  138           if (GenericApp_NwkState == DEV_END_DEVICE) 
        XRL     A,#0x6
        JNZ     ??GenericApp_ProcessEvent_3
//  139           { 
//  140             HalLedSet(HAL_LED_2,HAL_LED_MODE_ON);//¼ÓÈëÍøÂçºóÁÁµÆ
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x2
        LCALL   ??HalLedSet?relay
//  141             osal_set_event(GenericApp_TaskID,SEND_DATA_EVENT);
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x2
        MOV     R3,#0x0
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_set_event?relay
//  142              
//  143           }
//  144           break;
//  145 
//  146         default:
//  147           break;
//  148       }
//  149 
//  150       // Release the memory
//  151       osal_msg_deallocate( (uint8 *)MSGpkt );//ÊÍ·ÅÄÚ´æ
??GenericApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_msg_deallocate?relay
//  152 
//  153       // Next
//  154       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??GenericApp_ProcessEvent_1:
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        MOV     A,R6
        ORL     A,R7
        JZ      ??GenericApp_ProcessEvent_4
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,#-0x1a
        JZ      ??GenericApp_ProcessEvent_5
        ADD     A,#0x49
        JZ      ??GenericApp_ProcessEvent_2
        SJMP    ??GenericApp_ProcessEvent_3
??GenericApp_ProcessEvent_5:
        ; Setup parameters for call to function GenericApp_MessageMSGCB
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??GenericApp_MessageMSGCB?relay
        SJMP    ??GenericApp_ProcessEvent_3
//  155     }
//  156 
//  157     // return unprocessed events
//  158     return (events ^ SYS_EVENT_MSG);
??GenericApp_ProcessEvent_4:
        MOV     R2,?V0 + 0
        MOV     A,?V0 + 1
        XRL     A,#0x80
        MOV     R3,A
        SJMP    ??GenericApp_ProcessEvent_6
//  159   }
//  160 
//  161 
//  162  if ( events & SEND_DATA_EVENT )
??GenericApp_ProcessEvent_0:
        MOV     A,R2
        ANL     A,#0x2
        JZ      ??GenericApp_ProcessEvent_7
//  163   {
//  164     //Humidity_Measure(); //Êª¶ÈµÄ»ñÈ¡
//  165     //½ÓÊÜµ½²É¼¯µÄÊª¶È²¢·¢ËÍÊý¾Ý¸øÐ­µ÷Æ÷
//  166     GenericApp_SendTheMessage();
        ; Setup parameters for call to function GenericApp_SendTheMessage
        LCALL   ??GenericApp_SendTheMessage?relay
//  167     
//  168     // Setup to send message again
//  169     //¶¨Ê±´¥·¢ÊÂ¼þ
//  170     osal_start_timerEx( GenericApp_TaskID,SEND_DATA_EVENT,3000 );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x48
        MOV     R5,#0xb
        MOV     R2,#0x2
        MOV     R3,#0x0
        MOV     DPTR,#GenericApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  171   return( events & SEND_DATA_EVENT );
        MOV     A,?V0 + 0
        ANL     A,#0x2
        MOV     R2,A
        SJMP    ??GenericApp_ProcessEvent_8
//  172   }
//  173   return 0;
??GenericApp_ProcessEvent_7:
        MOV     R2,#0x0
??GenericApp_ProcessEvent_8:
        MOV     R3,#0x0
??GenericApp_ProcessEvent_6:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  174 }
//  175 /*uint8 *my_strcat(uint8 *str1, uint8 *str2)
//  176 {    
//  177   uint8 *pt = str1; 
//  178   while(*str1!='\0') str1++;  
//  179   while(*str2!='\0') *str1++ = *str2++; 
//  180   *str1 = '\0'; 
//  181   return pt;
//  182 }*/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  183 void GenericApp_SendTheMessage( void )
GenericApp_SendTheMessage:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function GenericApp_SendTheMessage
        CODE
//  184 { 
        FUNCALL GenericApp_SendTheMessage, DHT11
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_SendTheMessage, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_SendTheMessage, Delay_ms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_SendTheMessage, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_SendTheMessage, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 45, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 26
        MOV     A,#-0x1a
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 36)
//  185     uint8 humidity[26] = "Enddevice2 humidity is:";;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant "Enddevice2 humidity is:">` >> 8) & 0xff
        MOV     DPL,#`?<Constant "Enddevice2 humidity is:">` & 0xff
        MOV     A,#0x1a
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  186     //uint8 strTemp[26]= "Enddevice3 humidity is:";
//  187     //uint8 data[]={0};
//  188     DHT11();   //ÎÂ¶È²É¼¯ 
        ; Setup parameters for call to function DHT11
        LCALL   ??DHT11?relay
//  189     humidity[24]=shidu_shi+0x30;
        MOV     DPTR,#shidu_shi
        MOVX    A,@DPTR
        ADD     A,#0x30
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  190     humidity[25]=shidu_ge+0x30;
        MOV     DPTR,#shidu_ge
        MOVX    A,@DPTR
        ADD     A,#0x30
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  191     //humidity[2]='\0';
//  192     //data = my_strcat(strTemp,humidity);
//  193     //osal_memcpy(&strTemp[3],humidity,3);
//  194     //T[0]=wendu_shi+48;
//  195     //T[1]=wendu_ge+48;
//  196     //T[2]=' ';
//  197     //T[3]=shidu_shi+0x30;
//  198     //T[4]=shidu_ge+0x30;
//  199     HalLedSet(HAL_LED_1,HAL_LED_MODE_ON);
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x1
        LCALL   ??HalLedSet?relay
//  200     /*******´®¿Ú´òÓ¡*********/
//  201     Delay_ms(3000);
        ; Setup parameters for call to function Delay_ms
        MOV     R2,#-0x48
        MOV     R3,#0xb
        LCALL   ??Delay_ms?relay
//  202     //HalUARTWrite(0,"temperature is:",osal_strlen("temperature is:"));
//  203     //HalUARTWrite(0,humidity,26);
//  204     //HalUARTWrite(0,T+1,1);
//  205     //HalUARTWrite(0,"\n",1);*/    
//  206  
//  207     /*HalUARTWrite(0,"humidity is:",osal_strlen("humidity is:"));
//  208     HalUARTWrite(0,humidity,1);
//  209     HalUARTWrite(0,humidity+1,1);
//  210     HalUARTWrite(0,"\n",1); */
//  211     HalLedSet(HAL_LED_1,HAL_LED_MODE_OFF);
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x0
        MOV     R1,#0x1
        LCALL   ??HalLedSet?relay
//  212     //strcpy(Txdata,"HELLO WEBEE\n"); 
//  213     //char TXdata[15];
//  214      AF_DataRequest( &GenericApp_DstAddr, &GenericApp_epDesc,
//  215                        GENERICAPP_CLUSTERID,
//  216                        26,
//  217                        humidity,
//  218                        &GenericApp_TransID,
//  219                        AF_DISCV_ROUTE, 
//  220                        AF_DEFAULT_RADIUS ) ;
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 37)
        MOV     ?V0 + 0,#GenericApp_TransID & 0xff
        MOV     ?V0 + 1,#(GenericApp_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 39)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 41)
        MOV     ?V0 + 0,#0x1a
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 43)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 45)
        MOV     R1,#0x20
        MOV     R4,#GenericApp_epDesc & 0xff
        MOV     R5,#(GenericApp_epDesc >> 8) & 0xff
        MOV     R2,#GenericApp_DstAddr & 0xff
        MOV     R3,#(GenericApp_DstAddr >> 8) & 0xff
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 36)
//  221 
//  222 }
        MOV     A,#0x1a
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
//  223 /*
//  224   uint8 lineFeed[2] = {0x0A,0x0D};        //´®¿ÚÊä³ö»»ÐÐ
//  225   uint16 nwk;
//  226   
//  227   nwk = NLME_GetShortAddr();             //×ÔÉíÍøÂçµØÖ· ZDApp.c 856line
//  228   To_string(rftx.myNWK,(uint8 *)&nwk,2); //uint8*4 uint16 = uint8*2
//  229   To_string(rftx.myMAC,NLME_GetExtAddr(),8);
//  230   
//  231   
//  232   
//  233   HalUARTWrite(0,"parentMAC:",osal_strlen("parentMAC:"));
//  234   HalUARTWrite(0,rftx.pMAC,16);
//  235   HalUARTWrite(0,lineFeed,2);
//  236  
//  237 }*/
//  238  
//  239   /*AF_DataRequest( &GenericApp_DstAddr, &GenericApp_epDesc,
//  240                        GENERICAPP_CLUSTERID,
//  241                        11,
//  242                        (uint8 *)&rftx,
//  243                        &GenericApp_TransID,
//  244                        AF_DISCV_ROUTE, 
//  245                        AF_DEFAULT_RADIUS ) ;*/
//  246 
//  247 
//  248 /*************************************************************************
//  249 *uint16 NLME_GetShortAddr(void)º¯ÊýµÄ·µ»ØÖµÎª¸Ã½Úµã16Î»¶þ½øÖÆÊýµÄÍøÂçµØÖ·¡£
//  250 *Èç¹ûÐèÒª½«Õâ¸öÍøÂçµØÖ·Í¨¹ý´®¿ÚÔÚPC»úÉÏÒÔ×Ö·ûÐÎÊ½³ÊÏÖ¾ÍÐèÒª½èÖúÓÚ¶þ½øÖÆ
//  251 *Êý¾Ý×ª»»Îª×Ö·û´®µÄº¯Êý
//  252 ***************************************************************************/
//  253 //½«ÊýÖµ×ª»¯Îª×Ö·û´®¡£·µ»Ø¶ÔÓ¦µÄ×Ö·û´®¡£
//  254 /*void To_string(uint8 *dest,char *src,uint8 length)
//  255 {
//  256     uint8 *xad;
//  257     uint8 i=0;
//  258     uint8 ch;
//  259     xad = src + length-1;
//  260     for(i=0;i<length;i++,xad--)
//  261     {
//  262         ch=(*xad >> 4) & 0x0F;//³ýÓÚÊ®Áù
//  263         dest[i<<1] = ch + ((ch<10) ? '0' : '7');
//  264         ch = *xad & 0x0F;
//  265         dest[(i<<1) + 1] = ch + ((ch<10) ? '0' : '7');
//  266     }
//  267 }
//  268  
//  269   
//  270   char theMessageData[4] = "LED";
//  271 
//  272    AF_DataRequest( &GenericApp_DstAddr, &GenericApp_epDesc,
//  273                        GENERICAPP_CLUSTERID,
//  274                        (byte)osal_strlen( theMessageData ) + 1,
//  275                        (byte *)&theMessageData,
//  276                        &GenericApp_TransID,
//  277                        AF_DISCV_ROUTE, AF_DEFAULT_RADIUS ) ;
//  278   HalLedBlink(HAL_LED_2,0,50,500);*/
//  279 
//  280 //½ÓÊÕµ½Ð­µ÷Æ÷·¢ËÍ¹ýÀ´µÄÏûÏ¢£¬²¢×÷³ö²Ù×÷

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  281 void GenericApp_MessageMSGCB(afIncomingMSGPacket_t *pkt )
GenericApp_MessageMSGCB:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function GenericApp_MessageMSGCB
        CODE
//  282 {
        FUNCALL GenericApp_MessageMSGCB, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, osal_memcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, osal_memcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL GenericApp_MessageMSGCB, HalLedSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
//  283   char buf[7];
//  284   switch(pkt->clusterId)
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??GenericApp_MessageMSGCB_0
        INC     DPTR
        MOVX    A,@DPTR
??GenericApp_MessageMSGCB_0:
        JZ      $+5
        LJMP    ??GenericApp_MessageMSGCB_1 & 0xFFFF
//  285   {
//  286   case (GENERICAPP_CLUSTERID):
//  287     osal_memcpy(buf,pkt -> cmd.Data,7);
        ; Setup parameters for call to function osal_memcpy
        MOV     A,R2
        ADD     A,#0x21
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,#0x7
        MOV     R5,#0x0
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
//  288      if(osal_memcmp(buf,"LED_ON",7))
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 0,R1
        MOV     ?V0 + 1,R2
        ; Setup parameters for call to function osal_memcmp
        MOV     ?V0 + 4,#`?<Constant "LED_ON">` & 0xff
        MOV     ?V0 + 5,#(`?<Constant "LED_ON">` >> 8) & 0xff
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,#0x7
        MOV     R5,#0x0
        MOV     R3,?V0 + 2
        LCALL   ??osal_memcmp?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R1
        JZ      ??GenericApp_MessageMSGCB_2
//  289      {
//  290       HalLedSet(HAL_LED_2,HAL_LED_MODE_ON); 
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x2
        LCALL   ??HalLedSet?relay
//  291      }
//  292      if(osal_memcmp(buf,"LED_OFF",7))
??GenericApp_MessageMSGCB_2:
        ; Setup parameters for call to function osal_memcmp
        MOV     ?V0 + 4,#`?<Constant "LED_OFF">` & 0xff
        MOV     ?V0 + 5,#(`?<Constant "LED_OFF">` >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     R4,#0x7
        MOV     R5,#0x0
        MOV     R1,?V0 + 0
        MOV     R2,?V0 + 1
        MOV     R3,?V0 + 2
        LCALL   ??osal_memcmp?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R1
        JZ      ??GenericApp_MessageMSGCB_1
//  293      {
//  294       HalLedSet(HAL_LED_2,HAL_LED_MODE_ON);
        ; Setup parameters for call to function HalLedSet
        MOV     R2,#0x1
        MOV     R1,#0x2
        LCALL   ??HalLedSet?relay
//  295      }
//  296   }
//  297 }
??GenericApp_MessageMSGCB_1:
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_SendTheMessage?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_SendTheMessage

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??GenericApp_MessageMSGCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    GenericApp_MessageMSGCB

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Enddevice2 humidity is:">`:
        DB "Enddevice2 humidity is:"
        DB 0, 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "LED_ON">`:
        DB "LED_ON"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "LED_OFF">`:
        DB "LED_OFF"

        END
// 
// 629 bytes in segment BANKED_CODE
//  24 bytes in segment BANK_RELAYS
//   3 bytes in segment SFR_AN
//  55 bytes in segment XDATA_ROM_C
//  21 bytes in segment XDATA_Z
// 
// 653 bytes of CODE  memory
//  55 bytes of CONST memory
//   0 bytes of DATA  memory (+ 3 bytes shared)
//  21 bytes of XDATA memory
//
//Errors: none
//Warnings: none
