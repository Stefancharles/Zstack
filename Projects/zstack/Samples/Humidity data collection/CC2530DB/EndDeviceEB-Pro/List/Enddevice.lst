###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         08/Dec/2019  13:24:44 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas          #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\Enddevice.c                    #
#    Command line       =  -f "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas      #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\..\..\..\Tools\CC2530DB\f8wEnd #
#                          ev.cfg" (-DCPU32MHZ -DROOT=__near_func             #
#                          -DBLINK_LEDS) -f "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢Ê #
#                          µÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pr #
#                          ojects\zstack\Samples\Humidity data                #
#                          collection\CC2530DB\..\..\..\Tools\CC2530DB\f8wCon #
#                          fig.cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0         #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00000800          #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\Enddevice.c" -D ZIGBEEPRO -D   #
#                          NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D            #
#                          MT_SYS_FUNC -D MT_ZDO_FUNC -D LCD_SUPPORTED=DEBUG  #
#                          -D xPOWER_SAVING -lC "C:\Users\13911\Desktop\´®¿ÚÊ #
#                          Õ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4. #
#                          0\Projects\zstack\Samples\Humidity data            #
#                          collection\CC2530DB\EndDeviceEB-Pro\List\" -lA     #
#                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\EndDeviceEB-Pro\List\"         #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\EndDeviceEB-Pro\Obj\" -e       #
#                          --debug --core=plain --dptr=16,1                   #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas      #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data collection\CC2530DB\"    #
#                          -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas      #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\..\SOURCE\" -I                 #
#                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\..\..\..\ZMAIN\TI2530DB\" -I   #
#                          "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas         #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MT\" #
#                           -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas     #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\ #
#                          INCLUDE\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\ #
#                          Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projec #
#                          ts\zstack\Samples\Humidity data                    #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\ #
#                          TARGET\CC2530EB\" -I "C:\Users\13911\Desktop\´®¿ÚÊ #
#                          Õ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4. #
#                          0\Projects\zstack\Samples\Humidity data            #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL #
#                          \MCU\CCSOC\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢Êµ #
#                          Ñé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\Humidity data                 #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\OSAL #
#                          \INCLUDE\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé #
#                          \Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Proje #
#                          cts\zstack\Samples\Humidity data                   #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STAC #
#                          K\AF\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Tex #
#                          as Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\Humidity data                       #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STAC #
#                          K\NWK\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Te #
#                          xas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects #
#                          \zstack\Samples\Humidity data                      #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STAC #
#                          K\SEC\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Te #
#                          xas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects #
#                          \zstack\Samples\Humidity data                      #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STAC #
#                          K\SAPI\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\T #
#                          exas Instruments\ZStack-CC2530-2.3.0-1.4.0\Project #
#                          s\zstack\Samples\Humidity data                     #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STAC #
#                          K\SYS\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Te #
#                          xas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects #
#                          \zstack\Samples\Humidity data                      #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\STAC #
#                          K\ZDO\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Te #
#                          xas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects #
#                          \zstack\Samples\Humidity data                      #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC #
#                          \F8W\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Tex #
#                          as Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\ #
#                          zstack\Samples\Humidity data                       #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC #
#                          \" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas   #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\SERV #
#                          ICES\SADDR\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢Êµ #
#                          Ñé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\Humidity data                 #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\SERV #
#                          ICES\SDATA\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢Êµ #
#                          Ñé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\Humidity data                 #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\ #
#                          INCLUDE\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\ #
#                          Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projec #
#                          ts\zstack\Samples\Humidity data                    #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\ #
#                          HIGH_LEVEL\" -I "C:\Users\13911\Desktop\´®¿ÚÊÕ·¢Êµ #
#                          Ñé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Pro #
#                          jects\zstack\Samples\Humidity data                 #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\ #
#                          LOW_LEVEL\srf04\" -I "C:\Users\13911\Desktop\´®¿ÚÊ #
#                          Õ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4. #
#                          0\Projects\zstack\Samples\Humidity data            #
#                          collection\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\ #
#                          LOW_LEVEL\srf04\SINGLE_CHIP\" -Ohz                 #
#                          --require_prototypes                               #
#    List file          =  C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas          #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\EndDeviceEB-Pro\List\Enddevice #
#                          .lst                                               #
#    Object file        =  C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas          #
#                          Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zst #
#                          ack\Samples\Humidity data                          #
#                          collection\CC2530DB\EndDeviceEB-Pro\Obj\Enddevice. #
#                          r51                                                #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\13911\Desktop\´®¿ÚÊÕ·¢ÊµÑé\Texas Instruments\ZStack-CC2530-2.3.0-1.4.0\Projects\zstack\Samples\Humidity data collection\CC2530DB\Enddevice.c
      1          #include "OSAL.h"
      2          #include "AF.h"
      3          #include "ZDApp.h"
      4          #include "ZDObject.h"
      5          #include "ZDProfile.h"
      6          #include<string.h>
      7          #include "Coordinator.h"
      8          #include "DebugTrace.h"
      9          #include "DHT11.h"
     10          #if !defined( WIN32 )
     11            #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1
     12          #endif
     13          
     14          /* HAL Ó²¼þ³éÏó²ã(HAL) */
     15          #include "hal_lcd.h"
     16          #include "hal_led.h"
     17          #include "hal_key.h"
     18          #include "hal_uart.h"
     19          #define SEND_DATA_EVENT  0x02
     20          

   \                                 In  segment XDATA_ROM_C, align 1
     21          const cId_t GenericApp_ClusterList[GENERICAPP_MAX_CLUSTERS] =
   \                     GenericApp_ClusterList:
   \   000000   0100         DW 1
     22          {
     23            GENERICAPP_CLUSTERID
     24          };
     25          

   \                                 In  segment XDATA_ROM_C, align 1
     26          const SimpleDescriptionFormat_t GenericApp_SimpleDesc =
   \                     GenericApp_SimpleDesc:
   \   000000   0A           DB 10
   \   000001   040F         DW 3844
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   01           DB 1
   \   000007   ....         DW GenericApp_ClusterList
   \   000009   01           DB 1
   \   00000A   ....         DW GenericApp_ClusterList
     27          {
     28            GENERICAPP_ENDPOINT,              //  int Endpoint;
     29            GENERICAPP_PROFID,                //  uint16 AppProfId[2];
     30            GENERICAPP_DEVICEID,              //  uint16 AppDeviceId[2];
     31            GENERICAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
     32            GENERICAPP_FLAGS,                 //  int   AppFlags:4;
     33            GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
     34            (cId_t *)GenericApp_ClusterList,  //  byte *pAppInClusterList;
     35            GENERICAPP_MAX_CLUSTERS,          //  byte  AppNumInClusters;
     36            (cId_t *)GenericApp_ClusterList   //  byte *pAppInClusterList;
     37          };
     38          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     39          endPointDesc_t GenericApp_epDesc;
   \                     GenericApp_epDesc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     40          
     41          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     42          byte GenericApp_TaskID;   // Task ID for internal task/event processing
   \                     GenericApp_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     43                                    // This variable will be received when
     44                                    // GenericApp_Init() is called.

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     45          devStates_t GenericApp_NwkState;
   \                     GenericApp_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     46          
     47          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     48          byte GenericApp_TransID;  // This is the unique message ID (counter)
   \                     GenericApp_TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     49          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     50          afAddrType_t GenericApp_DstAddr;
   \                     GenericApp_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     51          
     52          //uint8 *my_strcat(uint8 *str1, uint8 *str2);
     53          void GenericApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
     54          void GenericApp_SendTheMessage( void );
     55          //void To_string(uint8 *dest,char *src,uint8 length);

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     56          void GenericApp_Init( byte task_id )
   \                     GenericApp_Init:
     57          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 29
   \   000005   74E3         MOV     A,#-0x1d
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
     58            GenericApp_TaskID = task_id;
   \   00000B   90....       MOV     DPTR,#GenericApp_TaskID
   \   00000E   F0           MOVX    @DPTR,A
     59            GenericApp_NwkState = DEV_INIT;
   \   00000F   90....       MOV     DPTR,#GenericApp_NwkState
   \   000012   7401         MOV     A,#0x1
   \   000014   F0           MOVX    @DPTR,A
     60            GenericApp_TransID = 0;
   \   000015   90....       MOV     DPTR,#GenericApp_TransID
   \   000018   E4           CLR     A
   \   000019   F0           MOVX    @DPTR,A
     61          
     62            P0SEL &= ~0x10; //³õÊ¼»¯P0_4µÄÎÂ¶È
   \   00001A   53F3EF       ANL     0xf3,#0xef
     63            P0DIR |= 0x10;   //0:ÊäÈë  1£ºÊä³ö
   \   00001D   43FD10       ORL     0xfd,#0x10
     64            P0_4 = 0;
   \   000020   C284         CLR     0x80.4
     65            // Device hardware initialization can be added here or in main() (Zmain.c).
     66            // If the hardware is application specific - add it here.
     67            // If the hardware is other parts of the device add it in main().
     68          
     69            //ÖÐ¶ÏÉèÖÃÎª¶ÔÐ­µ÷Æ÷µ¥²¥
     70            GenericApp_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   000022   90....       MOV     DPTR,#GenericApp_DstAddr + 8
   \   000025   7402         MOV     A,#0x2
   \   000027   F0           MOVX    @DPTR,A
     71            GenericApp_DstAddr.endPoint =GENERICAPP_ENDPOINT;
   \   000028   A3           INC     DPTR
   \   000029   740A         MOV     A,#0xa
   \   00002B   F0           MOVX    @DPTR,A
     72            GenericApp_DstAddr.addr.shortAddr = 0x00;
   \   00002C   90....       MOV     DPTR,#GenericApp_DstAddr
   \   00002F   E4           CLR     A
   \   000030   F0           MOVX    @DPTR,A
   \   000031   A3           INC     DPTR
   \   000032   F0           MOVX    @DPTR,A
     73           
     74            // Fill out the endpoint description.
     75            GenericApp_epDesc.endPoint = GENERICAPP_ENDPOINT;
   \   000033   90....       MOV     DPTR,#GenericApp_epDesc
   \   000036   740A         MOV     A,#0xa
   \   000038   F0           MOVX    @DPTR,A
     76            GenericApp_epDesc.task_id = &GenericApp_TaskID;
   \   000039   A3           INC     DPTR
   \   00003A   74..         MOV     A,#GenericApp_TaskID & 0xff
   \   00003C   F0           MOVX    @DPTR,A
   \   00003D   A3           INC     DPTR
   \   00003E   74..         MOV     A,#(GenericApp_TaskID >> 8) & 0xff
   \   000040   F0           MOVX    @DPTR,A
     77            GenericApp_epDesc.simpleDesc
     78                      = (SimpleDescriptionFormat_t *)&GenericApp_SimpleDesc;
   \   000041   A3           INC     DPTR
   \   000042   74..         MOV     A,#GenericApp_SimpleDesc & 0xff
   \   000044   F0           MOVX    @DPTR,A
   \   000045   A3           INC     DPTR
   \   000046   74..         MOV     A,#(GenericApp_SimpleDesc >> 8) & 0xff
   \   000048   F0           MOVX    @DPTR,A
     79            GenericApp_epDesc.latencyReq = noLatencyReqs;
   \   000049   A3           INC     DPTR
   \   00004A   E4           CLR     A
   \   00004B   F0           MOVX    @DPTR,A
     80          
     81            // Register the endpoint description with the AF
     82            afRegister( &GenericApp_epDesc );
   \   00004C                ; Setup parameters for call to function afRegister
   \   00004C   7A..         MOV     R2,#GenericApp_epDesc & 0xff
   \   00004E   7B..         MOV     R3,#(GenericApp_epDesc >> 8) & 0xff
   \   000050   12....       LCALL   ??afRegister?relay
     83           
     84            //´®¿ÚµÄÉèÖÃ
     85            halUARTCfg_t  uartConfig;
     86            //HalUARTCfg_t uartConfig;
     87            uartConfig.configured   =TRUE;
   \   000053   85..82       MOV     DPL,?XSP + 0
   \   000056   85..83       MOV     DPH,?XSP + 1
   \   000059   7401         MOV     A,#0x1
   \   00005B   F0           MOVX    @DPTR,A
     88            uartConfig.baudRate     =HAL_UART_BR_115200;
   \   00005C   12....       LCALL   ?XSTACK_DISP0_8
   \   00005F   7404         MOV     A,#0x4
   \   000061   F0           MOVX    @DPTR,A
     89            uartConfig.flowControl  =FALSE;
   \   000062   7402         MOV     A,#0x2
   \   000064   12....       LCALL   ?XSTACK_DISP0_8
   \   000067   E4           CLR     A
   \   000068   F0           MOVX    @DPTR,A
     90            uartConfig.callBackFunc =NULL;    
   \   000069   741B         MOV     A,#0x1b
   \   00006B   12....       LCALL   ?XSTACK_DISP0_8
   \   00006E   E4           CLR     A
   \   00006F   F0           MOVX    @DPTR,A
   \   000070   A3           INC     DPTR
   \   000071   F0           MOVX    @DPTR,A
     91            HalUARTOpen(0,&uartConfig);
   \   000072                ; Setup parameters for call to function HalUARTOpen
   \   000072   85..82       MOV     DPL,?XSP + 0
   \   000075   85..83       MOV     DPH,?XSP + 1
   \   000078   AA82         MOV     R2,DPL
   \   00007A   AB83         MOV     R3,DPH
   \   00007C   F9           MOV     R1,A
   \   00007D   12....       LCALL   ??HalUARTOpen?relay
     92          }
   \   000080   741D         MOV     A,#0x1d
   \   000082   12....       LCALL   ?DEALLOC_XSTACK8
   \   000085   7F01         MOV     R7,#0x1
   \   000087   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00008A                REQUIRE P0SEL
   \   00008A                REQUIRE P0DIR
   \   00008A                REQUIRE _A_P0
     93          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     94          UINT16 GenericApp_ProcessEvent( byte task_id, UINT16 events )
   \                     GenericApp_ProcessEvent:
     95          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV     ?V0 + 0,R2
   \   000007   8B..         MOV     ?V0 + 1,R3
     96            afIncomingMSGPacket_t *MSGpkt;
     97            
     98            if ( events & SYS_EVENT_MSG )
   \   000009   EB           MOV     A,R3
   \   00000A   5480         ANL     A,#0x80
   \   00000C   605B         JZ      ??GenericApp_ProcessEvent_0
     99            {
    100              MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
   \   00000E                ; Setup parameters for call to function osal_msg_receive
   \   00000E   8024         SJMP    ??GenericApp_ProcessEvent_1
    101              while ( MSGpkt )
    102              {
    103                switch ( MSGpkt->hdr.event )
    104                {
    105                 /* case ZDO_CB_MSG:
    106                    GenericApp_ProcessZDOMsgs( (zdoIncomingMsg_t *)MSGpkt );
    107                    break;
    108                    
    109                  case KEY_CHANGE:
    110                    GenericApp_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    111                    break;
    112                  case AF_DATA_CONFIRM_CMD:
    113                    // This message is received as a confirmation of a data packet sent.
    114                    // The status is of ZStatus_t type [defined in ZComDef.h]
    115                    // The message fields are defined in AF.h
    116                    afDataConfirm = (afDataConfirm_t *)MSGpkt;
    117                    sentEP = afDataConfirm->endpoint;
    118                    sentStatus = afDataConfirm->hdr.status;
    119                    sentTransID = afDataConfirm->transID;
    120                    (void)sentEP;
    121                    (void)sentTransID;
    122          
    123                    // Action taken when confirmation is received.
    124                    if ( sentStatus != ZSuccess )
    125                    {
    126                      // The data wasn't delivered -- Do something
    127                    }
    128                    break;*/
    129          
    130                    //Èç¹û½ÓÊÕµ½ÏûÏ¢
    131                  case AF_INCOMING_MSG_CMD:
    132                    GenericApp_MessageMSGCB( MSGpkt );
    133                    break;  
    134          
    135                   //¼ÓÈëÍøÂçºó
    136                  case ZDO_STATE_CHANGE:
    137                    GenericApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
   \                     ??GenericApp_ProcessEvent_2:
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   90....       MOV     DPTR,#GenericApp_NwkState
   \   000015   F0           MOVX    @DPTR,A
    138                    if (GenericApp_NwkState == DEV_END_DEVICE) 
   \   000016   6406         XRL     A,#0x6
   \   000018   7013         JNZ     ??GenericApp_ProcessEvent_3
    139                    { 
    140                      HalLedSet(HAL_LED_2,HAL_LED_MODE_ON);//¼ÓÈëÍøÂçºóÁÁµÆ
   \   00001A                ; Setup parameters for call to function HalLedSet
   \   00001A   7A01         MOV     R2,#0x1
   \   00001C   7902         MOV     R1,#0x2
   \   00001E   12....       LCALL   ??HalLedSet?relay
    141                      osal_set_event(GenericApp_TaskID,SEND_DATA_EVENT);
   \   000021                ; Setup parameters for call to function osal_set_event
   \   000021   7A02         MOV     R2,#0x2
   \   000023   7B00         MOV     R3,#0x0
   \   000025   90....       MOV     DPTR,#GenericApp_TaskID
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F9           MOV     R1,A
   \   00002A   12....       LCALL   ??osal_set_event?relay
    142                       
    143                    }
    144                    break;
    145          
    146                  default:
    147                    break;
    148                }
    149          
    150                // Release the memory
    151                osal_msg_deallocate( (uint8 *)MSGpkt );//ÊÍ·ÅÄÚ´æ
   \                     ??GenericApp_ProcessEvent_3:
   \   00002D                ; Setup parameters for call to function osal_msg_deallocate
   \   00002D   EE           MOV     A,R6
   \   00002E   FA           MOV     R2,A
   \   00002F   EF           MOV     A,R7
   \   000030   FB           MOV     R3,A
   \   000031   12....       LCALL   ??osal_msg_deallocate?relay
    152          
    153                // Next
    154                MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( GenericApp_TaskID );
   \   000034                ; Setup parameters for call to function osal_msg_receive
   \                     ??GenericApp_ProcessEvent_1:
   \   000034   90....       MOV     DPTR,#GenericApp_TaskID
   \   000037   E0           MOVX    A,@DPTR
   \   000038   F9           MOV     R1,A
   \   000039   12....       LCALL   ??osal_msg_receive?relay
   \   00003C   8A..         MOV     ?V0 + 2,R2
   \   00003E   8B..         MOV     ?V0 + 3,R3
   \   000040   AE..         MOV     R6,?V0 + 2
   \   000042   AF..         MOV     R7,?V0 + 3
   \   000044   EE           MOV     A,R6
   \   000045   4F           ORL     A,R7
   \   000046   6018         JZ      ??GenericApp_ProcessEvent_4
   \   000048   8E82         MOV     DPL,R6
   \   00004A   8F83         MOV     DPH,R7
   \   00004C   E0           MOVX    A,@DPTR
   \   00004D   24E6         ADD     A,#-0x1a
   \   00004F   6006         JZ      ??GenericApp_ProcessEvent_5
   \   000051   2449         ADD     A,#0x49
   \   000053   60BB         JZ      ??GenericApp_ProcessEvent_2
   \   000055   80D6         SJMP    ??GenericApp_ProcessEvent_3
   \                     ??GenericApp_ProcessEvent_5:
   \   000057                ; Setup parameters for call to function GenericApp_MessageMSGCB
   \   000057   EE           MOV     A,R6
   \   000058   FA           MOV     R2,A
   \   000059   EF           MOV     A,R7
   \   00005A   FB           MOV     R3,A
   \   00005B   12....       LCALL   ??GenericApp_MessageMSGCB?relay
   \   00005E   80CD         SJMP    ??GenericApp_ProcessEvent_3
    155              }
    156          
    157              // return unprocessed events
    158              return (events ^ SYS_EVENT_MSG);
   \                     ??GenericApp_ProcessEvent_4:
   \   000060   AA..         MOV     R2,?V0 + 0
   \   000062   E5..         MOV     A,?V0 + 1
   \   000064   6480         XRL     A,#0x80
   \   000066   FB           MOV     R3,A
   \   000067   8023         SJMP    ??GenericApp_ProcessEvent_6
    159            }
    160          
    161          
    162           if ( events & SEND_DATA_EVENT )
   \                     ??GenericApp_ProcessEvent_0:
   \   000069   EA           MOV     A,R2
   \   00006A   5402         ANL     A,#0x2
   \   00006C   601A         JZ      ??GenericApp_ProcessEvent_7
    163            {
    164              //Humidity_Measure(); //Êª¶ÈµÄ»ñÈ¡
    165              //½ÓÊÜµ½²É¼¯µÄÊª¶È²¢·¢ËÍÊý¾Ý¸øÐ­µ÷Æ÷
    166              GenericApp_SendTheMessage();
   \   00006E                ; Setup parameters for call to function GenericApp_SendTheMessage
   \   00006E   12....       LCALL   ??GenericApp_SendTheMessage?relay
    167              
    168              // Setup to send message again
    169              //¶¨Ê±´¥·¢ÊÂ¼þ
    170              osal_start_timerEx( GenericApp_TaskID,SEND_DATA_EVENT,3000 );
   \   000071                ; Setup parameters for call to function osal_start_timerEx
   \   000071   7CB8         MOV     R4,#-0x48
   \   000073   7D0B         MOV     R5,#0xb
   \   000075   7A02         MOV     R2,#0x2
   \   000077   7B00         MOV     R3,#0x0
   \   000079   90....       MOV     DPTR,#GenericApp_TaskID
   \   00007C   E0           MOVX    A,@DPTR
   \   00007D   F9           MOV     R1,A
   \   00007E   12....       LCALL   ??osal_start_timerEx?relay
    171            return( events & SEND_DATA_EVENT );
   \   000081   E5..         MOV     A,?V0 + 0
   \   000083   5402         ANL     A,#0x2
   \   000085   FA           MOV     R2,A
   \   000086   8002         SJMP    ??GenericApp_ProcessEvent_8
    172            }
    173            return 0;
   \                     ??GenericApp_ProcessEvent_7:
   \   000088   7A00         MOV     R2,#0x0
   \                     ??GenericApp_ProcessEvent_8:
   \   00008A   7B00         MOV     R3,#0x0
   \                     ??GenericApp_ProcessEvent_6:
   \   00008C   7F04         MOV     R7,#0x4
   \   00008E   02....       LJMP    ?BANKED_LEAVE_XDATA
    174          }
    175          /*uint8 *my_strcat(uint8 *str1, uint8 *str2)
    176          {    
    177            uint8 *pt = str1; 
    178            while(*str1!='\0') str1++;  
    179            while(*str2!='\0') *str1++ = *str2++; 
    180            *str1 = '\0'; 
    181            return pt;
    182          }*/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    183          void GenericApp_SendTheMessage( void )
   \                     GenericApp_SendTheMessage:
    184          { 
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 26
   \   000005   74E6         MOV     A,#-0x1a
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    185              uint8 humidity[26] = "Enddevice2 humidity is:";;
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   AC82         MOV     R4,DPL
   \   000012   AD83         MOV     R5,DPH
   \   000014   7583..       MOV     DPH,#(`?<Constant "Enddevice2 humidity is:">` >> 8) & 0xff
   \   000017   7582..       MOV     DPL,#`?<Constant "Enddevice2 humidity is:">` & 0xff
   \   00001A   741A         MOV     A,#0x1a
   \   00001C   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    186              //uint8 strTemp[26]= "Enddevice3 humidity is:";
    187              //uint8 data[]={0};
    188              DHT11();   //ÎÂ¶È²É¼¯ 
   \   00001F                ; Setup parameters for call to function DHT11
   \   00001F   12....       LCALL   ??DHT11?relay
    189              humidity[24]=shidu_shi+0x30;
   \   000022   90....       MOV     DPTR,#shidu_shi
   \   000025   E0           MOVX    A,@DPTR
   \   000026   2430         ADD     A,#0x30
   \   000028   C0E0         PUSH    A
   \   00002A   7418         MOV     A,#0x18
   \   00002C   12....       LCALL   ?XSTACK_DISP0_8
   \   00002F   D0E0         POP     A
   \   000031   F0           MOVX    @DPTR,A
    190              humidity[25]=shidu_ge+0x30;
   \   000032   90....       MOV     DPTR,#shidu_ge
   \   000035   E0           MOVX    A,@DPTR
   \   000036   2430         ADD     A,#0x30
   \   000038   C0E0         PUSH    A
   \   00003A   7419         MOV     A,#0x19
   \   00003C   12....       LCALL   ?XSTACK_DISP0_8
   \   00003F   D0E0         POP     A
   \   000041   F0           MOVX    @DPTR,A
    191              //humidity[2]='\0';
    192              //data = my_strcat(strTemp,humidity);
    193              //osal_memcpy(&strTemp[3],humidity,3);
    194              //T[0]=wendu_shi+48;
    195              //T[1]=wendu_ge+48;
    196              //T[2]=' ';
    197              //T[3]=shidu_shi+0x30;
    198              //T[4]=shidu_ge+0x30;
    199              HalLedSet(HAL_LED_1,HAL_LED_MODE_ON);
   \   000042                ; Setup parameters for call to function HalLedSet
   \   000042   7A01         MOV     R2,#0x1
   \   000044   7901         MOV     R1,#0x1
   \   000046   12....       LCALL   ??HalLedSet?relay
    200              /*******´®¿Ú´òÓ¡*********/
    201              Delay_ms(3000);
   \   000049                ; Setup parameters for call to function Delay_ms
   \   000049   7AB8         MOV     R2,#-0x48
   \   00004B   7B0B         MOV     R3,#0xb
   \   00004D   12....       LCALL   ??Delay_ms?relay
    202              //HalUARTWrite(0,"temperature is:",osal_strlen("temperature is:"));
    203              //HalUARTWrite(0,humidity,26);
    204              //HalUARTWrite(0,T+1,1);
    205              //HalUARTWrite(0,"\n",1);*/    
    206           
    207              /*HalUARTWrite(0,"humidity is:",osal_strlen("humidity is:"));
    208              HalUARTWrite(0,humidity,1);
    209              HalUARTWrite(0,humidity+1,1);
    210              HalUARTWrite(0,"\n",1); */
    211              HalLedSet(HAL_LED_1,HAL_LED_MODE_OFF);
   \   000050                ; Setup parameters for call to function HalLedSet
   \   000050   7A00         MOV     R2,#0x0
   \   000052   7901         MOV     R1,#0x1
   \   000054   12....       LCALL   ??HalLedSet?relay
    212              //strcpy(Txdata,"HELLO WEBEE\n"); 
    213              //char TXdata[15];
    214               AF_DataRequest( &GenericApp_DstAddr, &GenericApp_epDesc,
    215                                 GENERICAPP_CLUSTERID,
    216                                 26,
    217                                 humidity,
    218                                 &GenericApp_TransID,
    219                                 AF_DISCV_ROUTE, 
    220                                 AF_DEFAULT_RADIUS ) ;
   \   000057                ; Setup parameters for call to function AF_DataRequest
   \   000057   75..1E       MOV     ?V0 + 0,#0x1e
   \   00005A   78..         MOV     R0,#?V0 + 0
   \   00005C   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00005F   75....       MOV     ?V0 + 0,#GenericApp_TransID & 0xff
   \   000062   75....       MOV     ?V0 + 1,#(GenericApp_TransID >> 8) & 0xff
   \   000065   78..         MOV     R0,#?V0 + 0
   \   000067   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00006A   7403         MOV     A,#0x3
   \   00006C   12....       LCALL   ?XSTACK_DISP0_8
   \   00006F   8582..       MOV     ?V0 + 0,DPL
   \   000072   8583..       MOV     ?V0 + 1,DPH
   \   000075   78..         MOV     R0,#?V0 + 0
   \   000077   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00007A   75..1A       MOV     ?V0 + 0,#0x1a
   \   00007D   75..00       MOV     ?V0 + 1,#0x0
   \   000080   78..         MOV     R0,#?V0 + 0
   \   000082   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000085   75..01       MOV     ?V0 + 0,#0x1
   \   000088   78..         MOV     R0,#?V0 + 0
   \   00008A   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00008D   7920         MOV     R1,#0x20
   \   00008F   7C..         MOV     R4,#GenericApp_epDesc & 0xff
   \   000091   7D..         MOV     R5,#(GenericApp_epDesc >> 8) & 0xff
   \   000093   7A..         MOV     R2,#GenericApp_DstAddr & 0xff
   \   000095   7B..         MOV     R3,#(GenericApp_DstAddr >> 8) & 0xff
   \   000097   12....       LCALL   ??AF_DataRequest?relay
   \   00009A   7409         MOV     A,#0x9
   \   00009C   12....       LCALL   ?DEALLOC_XSTACK8
    221          
    222          }
   \   00009F   741A         MOV     A,#0x1a
   \   0000A1   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000A4   7F02         MOV     R7,#0x2
   \   0000A6   02....       LJMP    ?BANKED_LEAVE_XDATA
    223          /*
    224            uint8 lineFeed[2] = {0x0A,0x0D};        //´®¿ÚÊä³ö»»ÐÐ
    225            uint16 nwk;
    226            
    227            nwk = NLME_GetShortAddr();             //×ÔÉíÍøÂçµØÖ· ZDApp.c 856line
    228            To_string(rftx.myNWK,(uint8 *)&nwk,2); //uint8*4 uint16 = uint8*2
    229            To_string(rftx.myMAC,NLME_GetExtAddr(),8);
    230            
    231            
    232            
    233            HalUARTWrite(0,"parentMAC:",osal_strlen("parentMAC:"));
    234            HalUARTWrite(0,rftx.pMAC,16);
    235            HalUARTWrite(0,lineFeed,2);
    236           
    237          }*/
    238           
    239            /*AF_DataRequest( &GenericApp_DstAddr, &GenericApp_epDesc,
    240                                 GENERICAPP_CLUSTERID,
    241                                 11,
    242                                 (uint8 *)&rftx,
    243                                 &GenericApp_TransID,
    244                                 AF_DISCV_ROUTE, 
    245                                 AF_DEFAULT_RADIUS ) ;*/
    246          
    247          
    248          /*************************************************************************
    249          *uint16 NLME_GetShortAddr(void)º¯ÊýµÄ·µ»ØÖµÎª¸Ã½Úµã16Î»¶þ½øÖÆÊýµÄÍøÂçµØÖ·¡£
    250          *Èç¹ûÐèÒª½«Õâ¸öÍøÂçµØÖ·Í¨¹ý´®¿ÚÔÚPC»úÉÏÒÔ×Ö·ûÐÎÊ½³ÊÏÖ¾ÍÐèÒª½èÖúÓÚ¶þ½øÖÆ
    251          *Êý¾Ý×ª»»Îª×Ö·û´®µÄº¯Êý
    252          ***************************************************************************/
    253          //½«ÊýÖµ×ª»¯Îª×Ö·û´®¡£·µ»Ø¶ÔÓ¦µÄ×Ö·û´®¡£
    254          /*void To_string(uint8 *dest,char *src,uint8 length)
    255          {
    256              uint8 *xad;
    257              uint8 i=0;
    258              uint8 ch;
    259              xad = src + length-1;
    260              for(i=0;i<length;i++,xad--)
    261              {
    262                  ch=(*xad >> 4) & 0x0F;//³ýÓÚÊ®Áù
    263                  dest[i<<1] = ch + ((ch<10) ? '0' : '7');
    264                  ch = *xad & 0x0F;
    265                  dest[(i<<1) + 1] = ch + ((ch<10) ? '0' : '7');
    266              }
    267          }
    268           
    269            
    270            char theMessageData[4] = "LED";
    271          
    272             AF_DataRequest( &GenericApp_DstAddr, &GenericApp_epDesc,
    273                                 GENERICAPP_CLUSTERID,
    274                                 (byte)osal_strlen( theMessageData ) + 1,
    275                                 (byte *)&theMessageData,
    276                                 &GenericApp_TransID,
    277                                 AF_DISCV_ROUTE, AF_DEFAULT_RADIUS ) ;
    278            HalLedBlink(HAL_LED_2,0,50,500);*/
    279          
    280          //½ÓÊÕµ½Ð­µ÷Æ÷·¢ËÍ¹ýÀ´µÄÏûÏ¢£¬²¢×÷³ö²Ù×÷

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    281          void GenericApp_MessageMSGCB(afIncomingMSGPacket_t *pkt )
   \                     GenericApp_MessageMSGCB:
    282          {
   \   000000   74F1         MOV     A,#-0xf
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 7
   \   000005   74F9         MOV     A,#-0x7
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    283            char buf[7];
    284            switch(pkt->clusterId)
   \   00000A   8A82         MOV     DPL,R2
   \   00000C   8B83         MOV     DPH,R3
   \   00000E   A3           INC     DPTR
   \   00000F   A3           INC     DPTR
   \   000010   A3           INC     DPTR
   \   000011   A3           INC     DPTR
   \   000012   E0           MOVX    A,@DPTR
   \   000013   6401         XRL     A,#0x1
   \   000015   7002         JNZ     ??GenericApp_MessageMSGCB_0
   \   000017   A3           INC     DPTR
   \   000018   E0           MOVX    A,@DPTR
   \                     ??GenericApp_MessageMSGCB_0:
   \   000019   6003         JZ      $+5
   \   00001B   02....       LJMP    ??GenericApp_MessageMSGCB_1 & 0xFFFF
    285            {
    286            case (GENERICAPP_CLUSTERID):
    287              osal_memcpy(buf,pkt -> cmd.Data,7);
   \   00001E                ; Setup parameters for call to function osal_memcpy
   \   00001E   EA           MOV     A,R2
   \   00001F   2421         ADD     A,#0x21
   \   000021   F582         MOV     DPL,A
   \   000023   EB           MOV     A,R3
   \   000024   3400         ADDC    A,#0x0
   \   000026   F583         MOV     DPH,A
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F5..         MOV     ?V0 + 0,A
   \   00002B   A3           INC     DPTR
   \   00002C   E0           MOVX    A,@DPTR
   \   00002D   F5..         MOV     ?V0 + 1,A
   \   00002F   75..00       MOV     ?V0 + 2,#0x0
   \   000032   78..         MOV     R0,#?V0 + 0
   \   000034   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000037   7C07         MOV     R4,#0x7
   \   000039   7D00         MOV     R5,#0x0
   \   00003B   7403         MOV     A,#0x3
   \   00003D   12....       LCALL   ?XSTACK_DISP0_8
   \   000040   AA82         MOV     R2,DPL
   \   000042   AB83         MOV     R3,DPH
   \   000044   12....       LCALL   ??osal_memcpy?relay
   \   000047   7403         MOV     A,#0x3
   \   000049   12....       LCALL   ?DEALLOC_XSTACK8
    288               if(osal_memcmp(buf,"LED_ON",7))
   \   00004C   85..82       MOV     DPL,?XSP + 0
   \   00004F   85..83       MOV     DPH,?XSP + 1
   \   000052   A982         MOV     R1,DPL
   \   000054   AA83         MOV     R2,DPH
   \   000056   89..         MOV     ?V0 + 0,R1
   \   000058   8A..         MOV     ?V0 + 1,R2
   \   00005A                ; Setup parameters for call to function osal_memcmp
   \   00005A   75....       MOV     ?V0 + 4,#`?<Constant "LED_ON">` & 0xff
   \   00005D   75....       MOV     ?V0 + 5,#(`?<Constant "LED_ON">` >> 8) & 0xff
   \   000060   75..00       MOV     ?V0 + 6,#0x0
   \   000063   78..         MOV     R0,#?V0 + 4
   \   000065   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000068   7C07         MOV     R4,#0x7
   \   00006A   7D00         MOV     R5,#0x0
   \   00006C   AB..         MOV     R3,?V0 + 2
   \   00006E   12....       LCALL   ??osal_memcmp?relay
   \   000071   7403         MOV     A,#0x3
   \   000073   12....       LCALL   ?DEALLOC_XSTACK8
   \   000076   E9           MOV     A,R1
   \   000077   6007         JZ      ??GenericApp_MessageMSGCB_2
    289               {
    290                HalLedSet(HAL_LED_2,HAL_LED_MODE_ON); 
   \   000079                ; Setup parameters for call to function HalLedSet
   \   000079   7A01         MOV     R2,#0x1
   \   00007B   7902         MOV     R1,#0x2
   \   00007D   12....       LCALL   ??HalLedSet?relay
    291               }
    292               if(osal_memcmp(buf,"LED_OFF",7))
   \                     ??GenericApp_MessageMSGCB_2:
   \   000080                ; Setup parameters for call to function osal_memcmp
   \   000080   75....       MOV     ?V0 + 4,#`?<Constant "LED_OFF">` & 0xff
   \   000083   75....       MOV     ?V0 + 5,#(`?<Constant "LED_OFF">` >> 8) & 0xff
   \   000086   78..         MOV     R0,#?V0 + 4
   \   000088   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00008B   7C07         MOV     R4,#0x7
   \   00008D   7D00         MOV     R5,#0x0
   \   00008F   A9..         MOV     R1,?V0 + 0
   \   000091   AA..         MOV     R2,?V0 + 1
   \   000093   AB..         MOV     R3,?V0 + 2
   \   000095   12....       LCALL   ??osal_memcmp?relay
   \   000098   7403         MOV     A,#0x3
   \   00009A   12....       LCALL   ?DEALLOC_XSTACK8
   \   00009D   E9           MOV     A,R1
   \   00009E   6007         JZ      ??GenericApp_MessageMSGCB_1
    293               {
    294                HalLedSet(HAL_LED_2,HAL_LED_MODE_ON);
   \   0000A0                ; Setup parameters for call to function HalLedSet
   \   0000A0   7A01         MOV     R2,#0x1
   \   0000A2   7902         MOV     R1,#0x2
   \   0000A4   12....       LCALL   ??HalLedSet?relay
    295               }
    296            }
    297          }
   \                     ??GenericApp_MessageMSGCB_1:
   \   0000A7   7407         MOV     A,#0x7
   \   0000A9   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000AC   7F07         MOV     R7,#0x7
   \   0000AE   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_ProcessEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_ProcessEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_SendTheMessage?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_SendTheMessage

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??GenericApp_MessageMSGCB?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    GenericApp_MessageMSGCB

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Enddevice2 humidity is:">`:
   \   000000   456E6464     DB "Enddevice2 humidity is:"
   \            65766963
   \            65322068
   \            756D6964
   \            69747920
   \            69733A00
   \   000018   0000         DB 0, 0

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "LED_ON">`:
   \   000000   4C45445F     DB "LED_ON"
   \            4F4E00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "LED_OFF">`:
   \   000000   4C45445F     DB "LED_OFF"
   \            4F464600

   Maximum stack usage in bytes:

     Function                       ISTACK PSTACK XSTACK
     --------                       ------ ------ ------
     GenericApp_Init                    0      0     38
       -> afRegister                    0      0     76
       -> HalUARTOpen                   0      0     76
     GenericApp_MessageMSGCB            0      0     37
       -> osal_memcpy                   0      0     50
       -> osal_memcmp                   0      0     50
       -> HalLedSet                     0      0     44
       -> osal_memcmp                   0      0     50
       -> HalLedSet                     0      0     44
     GenericApp_ProcessEvent            0      0     12
       -> osal_msg_receive              0      0     24
       -> HalLedSet                     0      0     24
       -> osal_set_event                0      0     24
       -> osal_msg_deallocate           0      0     24
       -> osal_msg_receive              0      0     24
       -> GenericApp_MessageMSGCB       0      0     24
       -> GenericApp_SendTheMessage     0      0     24
       -> osal_start_timerEx            0      0     24
     GenericApp_SendTheMessage          2      0     57
       -> DHT11                         0      0     72
       -> HalLedSet                     0      0     72
       -> Delay_ms                      0      0     72
       -> HalLedSet                     0      0     72
       -> AF_DataRequest                0      0     90


   Segment part sizes:

     Function/Label                        Bytes
     --------------                        -----
     _A_P0                                    1
     P0SEL                                    1
     P0DIR                                    1
     GenericApp_ClusterList                   2
     GenericApp_SimpleDesc                   12
     GenericApp_epDesc                        6
     GenericApp_TaskID                        1
     GenericApp_NwkState                      1
     GenericApp_TransID                       1
     GenericApp_DstAddr                      12
     GenericApp_Init                        138
     GenericApp_ProcessEvent                145
     GenericApp_SendTheMessage              169
     GenericApp_MessageMSGCB                177
     ??GenericApp_Init?relay                  6
     ??GenericApp_ProcessEvent?relay          6
     ??GenericApp_SendTheMessage?relay        6
     ??GenericApp_MessageMSGCB?relay          6
     ?<Constant "Enddevice2 humidity is:">   26
     ?<Constant "LED_ON">                     7
     ?<Constant "LED_OFF">                    8

 
 629 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
  55 bytes in segment XDATA_ROM_C
  21 bytes in segment XDATA_Z
 
 653 bytes of CODE  memory
  55 bytes of CONST memory
   0 bytes of DATA  memory (+ 3 bytes shared)
  21 bytes of XDATA memory

Errors: none
Warnings: none
